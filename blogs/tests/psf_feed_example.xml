<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:openSearch="http://a9.com/-/spec/opensearch/1.1/" xmlns:blogger="http://schemas.google.com/blogger/2008" xmlns:georss="http://www.georss.org/georss" xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" gd:etag="W/&quot;AkcHQX04fip7ImA9WhFUFUo.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163</id><updated>2013-08-27T00:33:50.336-04:00</updated><category term="buildbot" /><category term="contributors" /><category term="platforms" /><category term="3" /><category term="docs" /><category term="mercurial" /><category term="releases" /><title>Python Insider</title><subtitle type="html">Python core development news and information.</subtitle><link rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml" href="http://blog.python.org/feeds/posts/default" /><link rel="alternate" type="text/html" href="http://blog.python.org/" /><link rel="next" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default?start-index=26&amp;max-results=25&amp;redirect=false&amp;v=2" /><author><name>Doug Hellmann</name><uri>http://www.blogger.com/profile/01892352754222143463</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="http://1.bp.blogspot.com/_--Fv8pzwveE/TUqnh9CVaTI/AAAAAAAAAWs/Z5gcLDnoegA/s220/book-smaller.jpg" /></author><generator version="7.00" uri="http://www.blogger.com">Blogger</generator><openSearch:totalResults>36</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/PythonInsider" /><feedburner:info uri="pythoninsider" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><feedburner:emailServiceId>PythonInsider</feedburner:emailServiceId><feedburner:feedburnerHostname>http://feedburner.google.com</feedburner:feedburnerHostname><entry gd:etag="W/&quot;A0UER3k6cSp7ImA9WhBRFE0.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-1556999210799355133</id><published>2013-03-04T10:00:00.000-05:00</published><updated>2013-03-04T10:00:06.719-05:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2013-03-04T10:00:06.719-05:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="contributors" /><title>Introducing Electronic Contributor Agreements</title><content type="html">&lt;br /&gt;
We're happy to announce the new way to file a contributor agreement: on the web at&amp;nbsp;&lt;a href="http://www.python.org/psf/contrib/contrib-form/"&gt;http://www.python.org/psf/contrib/contrib-form/&lt;/a&gt;.&lt;br /&gt;
&lt;br /&gt;
Through the use of&amp;nbsp;&lt;a href="https://www.echosign.adobe.com/en/home.html"&gt;Adobe's EchoSign&lt;/a&gt;, we got rid of the old hand-written, print out, scan or photograph, then fax or email of your form. It was a hassle for our contributors, and a hassle for our administrators. Faxes fail, mail gets lost, and sometimes pictures or scans turn out poorly. It was time to find a more user-friendly solution, and the Foundation is happy to finally offer this electronic form.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
The new form is easy to fill out right on the site, guiding you through each of the required fields such as your name, bug tracker ID, address, and initial license. If you're signing the form on behalf of an organization, there's a check box to specify this, and then you are asked near the bottom to state your title in the organization. Lastly, your signature is either generated from your typed name, or you can draw your own or upload a signature file of your own.&lt;br /&gt;
&lt;br /&gt;
Once you submit the form, you'll receive an email from echosign.com to verify the email address you entered. Once you click to confirm your address, the form will be emailed to the PSF and will be recorded.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
We require all contributors to CPython to have a signed form, and we hope this makes it easier for potential contributors to join up and help make Python better. It's available just in time for&amp;nbsp;&lt;a href="https://us.pycon.org/2013/"&gt;PyCon&lt;/a&gt;&amp;nbsp;and the&amp;nbsp;&lt;a href="https://us.pycon.org/2013/community/sprints/projects/#core-python"&gt;CPython sprint&lt;/a&gt;&amp;nbsp;that will be occurring March 18 through 21 in Santa Clara, California. Join us at the sprint, sign your contributor form, and help us fix some bugs or add some features!&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=tGNCqyOiun4:FplHbf8RNFc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=tGNCqyOiun4:FplHbf8RNFc:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=tGNCqyOiun4:FplHbf8RNFc:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=tGNCqyOiun4:FplHbf8RNFc:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=tGNCqyOiun4:FplHbf8RNFc:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=tGNCqyOiun4:FplHbf8RNFc:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=tGNCqyOiun4:FplHbf8RNFc:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=tGNCqyOiun4:FplHbf8RNFc:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/tGNCqyOiun4" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/1556999210799355133?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/1556999210799355133?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/tGNCqyOiun4/introducing-electronic-contributor.html" title="Introducing Electronic Contributor Agreements" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2013/03/introducing-electronic-contributor.html</feedburner:origLink></entry><entry gd:etag="W/&quot;DUUDRnY6cSp7ImA9WhBSFE8.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-2793038509123465737</id><published>2013-02-19T10:00:00.000-05:00</published><updated>2013-02-21T01:14:37.819-05:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2013-02-21T01:14:37.819-05:00</app:edited><title>Announcing defusedxml, Fixes for XML Security Issues</title><content type="html">&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif; font-size: xx-small;"&gt;&lt;i&gt;The following post was created on behalf of CPython contributor Christian Heimes using a subset of details found &lt;a href="https://bitbucket.org/tiran/defusedxml"&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Christian Heimes announces the release of his &lt;a href="https://bitbucket.org/tiran/defusedxml"&gt;defusedxml&lt;/a&gt;&amp;nbsp;and &lt;a href="https://bitbucket.org/tiran/defusedexpat"&gt;defusedexpat&lt;/a&gt;&amp;nbsp;packages to address XML-related security issues which were reported to &lt;a href="mailto:security@python.org"&gt;security@python.org&lt;/a&gt; over the last several months. Throughout the development of the patches, the security team has coordinated with other open source projects in order to make this announcement at 1500 UTC on Tuesday February 19.&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Details will follow once releases of CPython have been organized.&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif; font-size: xx-small;"&gt;&lt;i style="background-color: #cfe2f3;"&gt;&lt;b&gt;Note: this post will be updated with more details as they switch from being private to publicly available, including links to the public bug reports on&amp;nbsp;&lt;a href="http://bugs.python.org/"&gt;http://bugs.python.org&lt;/a&gt;.&lt;/b&gt;&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;&lt;span style="background-color: white;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="background-color: white;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;defusedxml on PyPI:&amp;nbsp;&lt;/span&gt;&lt;a href="https://pypi.python.org/pypi/defusedxml"&gt;https://pypi.python.org/pypi/defusedxml&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style="background-color: white;"&gt;defusedexpat on PyPI:&amp;nbsp;&lt;a href="https://pypi.python.org/pypi/defusedexpat"&gt;https://pypi.python.org/pypi/defusedexpat&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
"XML vulnerabilities" on bug tracker:&amp;nbsp;&lt;a href="http://bugs.python.org/issue17239"&gt;http://bugs.python.org/issue17239&lt;/a&gt;&lt;br /&gt;
&lt;h2 style="background-color: white; color: #333333; line-height: 1.5625; margin: 20px 0px 5px;"&gt;
&lt;a class="toc-backref" href="https://bitbucket.org/PSF/defusedxml/#id2" style="color: #3c77b4; text-decoration: initial;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif; font-size: small;"&gt;Synopsis&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div style="background-color: white; color: #333333; line-height: 20px; margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;The results of an attack on a vulnerable XML library can be fairly dramatic. With just a few hundred&amp;nbsp;&lt;strong&gt;Bytes&lt;/strong&gt;&amp;nbsp;of XML data an attacker can occupy several&amp;nbsp;&lt;strong&gt;Gigabytes&lt;/strong&gt;&amp;nbsp;of memory within&amp;nbsp;&lt;strong&gt;seconds&lt;/strong&gt;. An attacker can also keep CPUs busy for a long time with a small to medium size request. Under some circumstances it is even possible to access local files on your server, to circumvent a firewall, or to abuse services to rebound attacks to third parties.&lt;/span&gt;&lt;/div&gt;
&lt;div style="background-color: white; color: #333333; line-height: 20px; margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;The attacks use and abuse less common features of XML and its parsers. The majority of developers are unacquainted with features such as processing instructions and entity expansions that XML inherited from SGML. At best they know about&amp;nbsp;&lt;tt class="docutils literal" style="background-color: whitesmoke; border-bottom-left-radius: 2px; border-bottom-right-radius: 2px; border-top-left-radius: 2px; border-top-right-radius: 2px; border: 1px solid rgb(204, 204, 204); padding: 1px 3px; vertical-align: middle;"&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/tt&gt;&amp;nbsp;from experience with HTML but they are not aware that a document type definition (DTD) can generate an HTTP request or load a file from the file system.&lt;/span&gt;&lt;/div&gt;
&lt;div style="background-color: white; color: #333333; line-height: 20px; margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;None of the issues is new. They have been known for a long time. Billion laughs was first reported in 2003. Nevertheless some XML libraries and applications are still vulnerable and even heavy users of XML are surprised by these features. It's hard to say whom to blame for the situation. It's too short sighted to shift all blame on XML parsers and XML libraries for using insecure default settings. After all they properly implement XML specifications. Application developers must not rely that a library is always configured for security and potential harmful data by default.&lt;/span&gt;&lt;/div&gt;
&lt;div style="background-color: white; color: #333333; font-size: 14px; line-height: 20px; margin-top: 10px;"&gt;
&lt;/div&gt;
&lt;h2 style="font-size: 16px; line-height: 1.5625; margin: 20px 0px 5px;"&gt;
&lt;/h2&gt;
&lt;h2 style="line-height: 1.5625; margin: 20px 0px 5px;"&gt;
&lt;a class="toc-backref" href="https://bitbucket.org/PSF/defusedxml#id3" style="color: #3c77b4; text-decoration: initial;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif; font-size: small;"&gt;Attack vectors&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="billion-laughs-exponential-entity-expansion" style="font-weight: normal; line-height: 20px;"&gt;
&lt;h3 style="line-height: 1.5; margin: 0px 0px 5px;"&gt;
&lt;a class="toc-backref" href="https://bitbucket.org/PSF/defusedxml#id4" style="color: #3c77b4; text-decoration: initial;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif; font-size: small;"&gt;billion laughs / exponential entity expansion&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;The&amp;nbsp;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Billion_laughs" style="color: #3c77b4; text-decoration: initial;"&gt;Billion Laughs&lt;/a&gt;&amp;nbsp;attack -- also known as exponential entity expansion -- uses multiple levels of nested entities. The original example uses 9 levels of 10 expansions in each level to expand the string&amp;nbsp;&lt;tt class="docutils literal" style="background-color: whitesmoke; border-bottom-left-radius: 2px; border-bottom-right-radius: 2px; border-top-left-radius: 2px; border-top-right-radius: 2px; border: 1px solid rgb(204, 204, 204); padding: 1px 3px; vertical-align: middle;"&gt;lol&lt;/tt&gt;&amp;nbsp;to a string of 3 * 10&amp;nbsp;&lt;sup&gt;9&lt;/sup&gt;&amp;nbsp;bytes, hence the name "billion laughs". The resulting string occupies 3 GB (2.79 GiB) of memory; intermediate strings require additional memory. Because most parsers don't cache the intermediate step for every expansion it is repeated over and over again. It increases the CPU load even more.&lt;/span&gt;&lt;/div&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;An XML document of just a few hundred bytes can disrupt all services on a machine within seconds.&lt;/span&gt;&lt;/div&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Example XML:&lt;/span&gt;&lt;/div&gt;
&lt;pre class="literal-block" style="background-color: whitesmoke; border-bottom-left-radius: 5px; border-bottom-right-radius: 5px; border-top-left-radius: 5px; border-top-right-radius: 5px; border: 1px solid rgb(204, 204, 204); box-sizing: border-box; line-height: 1.4; margin-bottom: 9px; margin-top: 9px; overflow: auto; padding: 10px; width: 615px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;&amp;lt;!DOCTYPE xmlbomb [
&amp;lt;!ENTITY a "1234567890" &amp;gt;
&amp;lt;!ENTITY b "&amp;amp;a;&amp;amp;a;&amp;amp;a;&amp;amp;a;&amp;amp;a;&amp;amp;a;&amp;amp;a;&amp;amp;a;"&amp;gt;
&amp;lt;!ENTITY c "&amp;amp;b;&amp;amp;b;&amp;amp;b;&amp;amp;b;&amp;amp;b;&amp;amp;b;&amp;amp;b;&amp;amp;b;"&amp;gt;
&amp;lt;!ENTITY d "&amp;amp;c;&amp;amp;c;&amp;amp;c;&amp;amp;c;&amp;amp;c;&amp;amp;c;&amp;amp;c;&amp;amp;c;"&amp;gt;
]&amp;gt;
&amp;lt;bomb&amp;gt;&amp;amp;d;&amp;lt;/bomb&amp;gt;
&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="quadratic-blowup-entity-expansion" style="font-weight: normal; line-height: 20px;"&gt;
&lt;h3 style="line-height: 1.5; margin: 0px 0px 5px;"&gt;
&lt;a class="toc-backref" href="https://bitbucket.org/PSF/defusedxml#id5" style="color: #3c77b4; text-decoration: initial;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif; font-size: small;"&gt;quadratic blowup entity expansion&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;A quadratic blowup attack is similar to a&amp;nbsp;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Billion_laughs" style="color: #3c77b4; text-decoration: initial;"&gt;Billion Laughs&lt;/a&gt;&amp;nbsp;attack; it abuses entity expansion, too. Instead of nested entities it repeats one large entity with a couple of ten thousand chars over and over again. The attack isn't as efficient as the exponential case but it avoids triggering countermeasures of parsers against heavily nested entities. Some parsers limit the depth and breadth of a single entity but not the total amount of expanded text throughout an entire XML document.&lt;/span&gt;&lt;/div&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;A medium-sized XML document with a couple of hundred kilobytes can require a couple of hundred MB to several GB of memory. When the attack is combined with some level of nested expansion an attacker is able to achieve a higher ratio of success.&lt;/span&gt;&lt;/div&gt;
&lt;pre class="literal-block" style="background-color: whitesmoke; border-bottom-left-radius: 5px; border-bottom-right-radius: 5px; border-top-left-radius: 5px; border-top-right-radius: 5px; border: 1px solid rgb(204, 204, 204); box-sizing: border-box; line-height: 1.4; margin-bottom: 9px; margin-top: 9px; overflow: auto; padding: 10px; width: 615px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;&amp;lt;!DOCTYPE bomb [
&amp;lt;!ENTITY a "xxxxxxx... a couple of ten thousand chars"&amp;gt;
]&amp;gt;
&amp;lt;bomb&amp;gt;&amp;amp;a;&amp;amp;a;&amp;amp;a;... repeat&amp;lt;/bomb&amp;gt;
&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="external-entity-expansion-remote" style="font-weight: normal; line-height: 20px;"&gt;
&lt;h3 style="line-height: 1.5; margin: 0px 0px 5px;"&gt;
&lt;a class="toc-backref" href="https://bitbucket.org/PSF/defusedxml#id6" style="color: #3c77b4; text-decoration: initial;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif; font-size: small;"&gt;external entity expansion (remote)&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Entity declarations can contain more than just text for replacement. They can also point to external resources by public identifiers or system identifiers. System identifiers are standard URIs. When the URI is a URL (e.g. a&amp;nbsp;&lt;tt class="docutils literal" style="background-color: whitesmoke; border-bottom-left-radius: 2px; border-bottom-right-radius: 2px; border-top-left-radius: 2px; border-top-right-radius: 2px; border: 1px solid rgb(204, 204, 204); padding: 1px 3px; vertical-align: middle;"&gt;&lt;span class="pre"&gt;http://&lt;/span&gt;&lt;/tt&gt;&amp;nbsp;locator) some parsers download the resource from the remote location and embed them into the XML document verbatim.&lt;/span&gt;&lt;/div&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Simple example of a parsed external entity:&lt;/span&gt;&lt;/div&gt;
&lt;pre class="literal-block" style="background-color: whitesmoke; border-bottom-left-radius: 5px; border-bottom-right-radius: 5px; border-top-left-radius: 5px; border-top-right-radius: 5px; border: 1px solid rgb(204, 204, 204); box-sizing: border-box; line-height: 1.4; margin-bottom: 9px; margin-top: 9px; overflow: auto; padding: 10px; width: 615px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;&amp;lt;!DOCTYPE external [
&amp;lt;!ENTITY ee SYSTEM "http://www.python.org/some.xml"&amp;gt;
]&amp;gt;
&amp;lt;root&amp;gt;&amp;amp;ee;&amp;lt;/root&amp;gt;
&lt;/span&gt;&lt;/pre&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;The case of parsed external entities works only for valid XML content. The XML standard also supports unparsed external entities with a&amp;nbsp;&lt;tt class="docutils literal" style="background-color: whitesmoke; border-bottom-left-radius: 2px; border-bottom-right-radius: 2px; border-top-left-radius: 2px; border-top-right-radius: 2px; border: 1px solid rgb(204, 204, 204); padding: 1px 3px; vertical-align: middle;"&gt;NData declaration&lt;/tt&gt;.&lt;/span&gt;&lt;/div&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;External entity expansion opens the door to plenty of exploits. An attacker can abuse a vulnerable XML library and application to rebound and forward network requests with the IP address of the server. It highly depends on the parser and the application what kind of exploit is possible. For example:&lt;/span&gt;&lt;/div&gt;
&lt;ul class="simple" style="margin: 10px 0px 0px;"&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;An attacker can circumvent firewalls and gain access to restricted resources as all the requests are made from an internal and trustworthy IP address, not from the outside.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;An attacker can abuse a service to attack, spy on or DoS your servers but also third party services. The attack is disguised with the IP address of the server and the attacker is able to utilize the high bandwidth of a big machine.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;An attacker can exhaust additional resources on the machine, e.g. with requests to a service that doesn't respond or responds with very large files.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;An attacker may gain knowledge, when, how often and from which IP address a XML document is accessed.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;An attacker could send mail from inside your network if the URL handler supports&amp;nbsp;&lt;tt class="docutils literal" style="background-color: whitesmoke; border-bottom-left-radius: 2px; border-bottom-right-radius: 2px; border-top-left-radius: 2px; border-top-right-radius: 2px; border: 1px solid rgb(204, 204, 204); padding: 1px 3px; vertical-align: middle;"&gt;&lt;span class="pre"&gt;smtp://&lt;/span&gt;&lt;/tt&gt;&amp;nbsp;URIs.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="external-entity-expansion-local-file" style="font-weight: normal; line-height: 20px;"&gt;
&lt;h3 style="line-height: 1.5; margin: 0px 0px 5px;"&gt;
&lt;a class="toc-backref" href="https://bitbucket.org/PSF/defusedxml#id7" style="color: #3c77b4; text-decoration: initial;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif; font-size: small;"&gt;external entity expansion (local file)&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;External entities with references to local files are a sub-case of external entity expansion. It's listed as an extra attack because it deserves extra attention. Some XML libraries such as lxml disable network access by default but still allow entity expansion with local file access by default. Local files are either referenced with a&amp;nbsp;&lt;tt class="docutils literal" style="background-color: whitesmoke; border-bottom-left-radius: 2px; border-bottom-right-radius: 2px; border-top-left-radius: 2px; border-top-right-radius: 2px; border: 1px solid rgb(204, 204, 204); padding: 1px 3px; vertical-align: middle;"&gt;&lt;span class="pre"&gt;file://&lt;/span&gt;&lt;/tt&gt;&amp;nbsp;URL or by a file path (either relative or absolute).&lt;/span&gt;&lt;/div&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;An attacker may be able to access and download all files that can be read by the application process. This may include critical configuration files, too.&lt;/span&gt;&lt;/div&gt;
&lt;pre class="literal-block" style="background-color: whitesmoke; border-bottom-left-radius: 5px; border-bottom-right-radius: 5px; border-top-left-radius: 5px; border-top-right-radius: 5px; border: 1px solid rgb(204, 204, 204); box-sizing: border-box; line-height: 1.4; margin-bottom: 9px; margin-top: 9px; overflow: auto; padding: 10px; width: 615px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;&amp;lt;!DOCTYPE external [
&amp;lt;!ENTITY ee SYSTEM "file:///PATH/TO/simple.xml"&amp;gt;
]&amp;gt;
&amp;lt;root&amp;gt;&amp;amp;ee;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 style="font-size: 16px; line-height: 1.5625; margin: 20px 0px 5px;"&gt;
&lt;/h2&gt;
&lt;h2 style="line-height: 1.5625; margin: 20px 0px 5px;"&gt;
&lt;span style="color: #3c77b4; font-family: Helvetica Neue, Arial, Helvetica, sans-serif; font-size: xx-small; text-decoration: initial;"&gt;&lt;a class="toc-backref" href="https://bitbucket.org/PSF/defusedxml#id9" style="color: #3c77b4; text-decoration: initial;"&gt;Python XML Libraries&lt;/a&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils" style="color: #333333; line-height: 20px;"&gt;&lt;caption&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;vulnerabilities and features&lt;/span&gt;&lt;/caption&gt;&lt;colgroup&gt;&lt;col width="31%"&gt;&lt;/col&gt;&lt;col width="9%"&gt;&lt;/col&gt;&lt;col width="10%"&gt;&lt;/col&gt;&lt;col width="10%"&gt;&lt;/col&gt;&lt;col width="9%"&gt;&lt;/col&gt;&lt;col width="10%"&gt;&lt;/col&gt;&lt;col width="10%"&gt;&lt;/col&gt;&lt;col width="10%"&gt;&lt;/col&gt;&lt;/colgroup&gt;&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;kind&lt;/span&gt;&lt;/th&gt;&lt;th class="head"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;sax&lt;/span&gt;&lt;/th&gt;&lt;th class="head"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;etree&lt;/span&gt;&lt;/th&gt;&lt;th class="head"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;minidom&lt;/span&gt;&lt;/th&gt;&lt;th class="head"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;pulldom&lt;/span&gt;&lt;/th&gt;&lt;th class="head"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;xmlrpc&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;billion laughs&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;quadratic blowup&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;external entity expansion (remote)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False (3)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False (4)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;untested&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;external entity expansion (local file)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False (3)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False (4)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;untested&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;DTD retrieval&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;untested&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;gzip bomb&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;True&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;xpath support (7)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;xsl(t) support (7)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;xinclude support (7)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;&lt;strong&gt;True&lt;/strong&gt;&amp;nbsp;(6)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;False&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;C library&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;expat&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;expat&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;expat&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;expat&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;expat&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol class="arabic simple" style="margin: 10px 0px 0px;"&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Lxml is protected against billion laughs attacks and doesn't do network lookups by default.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;libxml2 and lxml are not directly vulnerable to gzip decompression bombs but they don't protect you against them either.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;xml.etree doesn't expand entities and raises a ParserError when an entity occurs.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;minidom doesn't expand entities and simply returns the unexpanded entity verbatim.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;genshi.input of genshi 0.6 doesn't support entity expansion and raises a ParserError when an entity occurs.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Library has (limited) XInclude support but requires an additional step to process inclusion.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;These are features but they may introduce exploitable holes&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;br /&gt;
&lt;h2 style="background-color: white; color: #333333; font-size: 16px; line-height: 1.5625; margin: 20px 0px 5px;"&gt;
&lt;a class="toc-backref" href="https://bitbucket.org/PSF/defusedxml#id24" style="color: #3c77b4; font-family: 'Helvetica Neue', Arial, Helvetica, sans-serif; font-size: medium; line-height: 1.5625;"&gt;How to avoid XML vulnerabilities&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="best-practices" style="background-color: white; color: #333333; line-height: 20px;"&gt;
&lt;h3 style="line-height: 1.5; margin: 0px 0px 5px;"&gt;
&lt;a class="toc-backref" href="https://bitbucket.org/PSF/defusedxml#id25" style="color: #3c77b4; text-decoration: initial;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif; font-size: small;"&gt;Best practices&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple" style="margin: 10px 0px 0px;"&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Don't allow DTDs&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Don't expand entities&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Don't resolve externals&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Limit parse depth&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Limit total input size&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Limit parse time&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Favor a SAX or iterparse-like parser for potential large data&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Validate and properly quote arguments to XSL transformations and XPath queries&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Don't use XPath expression from untrusted sources&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Don't apply XSL transformations that come untrusted sources&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;(based on Brad Hill's&amp;nbsp;&lt;a class="reference external" href="https://www.isecpartners.com/media/12976/iSEC-HILL-Attacking-XML-Security-bh07.pdf" style="color: #3c77b4; text-decoration: initial;"&gt;Attacking XML Security&lt;/a&gt;)&lt;/span&gt;&lt;/div&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;/div&gt;
&lt;h2 style="line-height: 1.5625; margin: 20px 0px 5px;"&gt;
&lt;a class="toc-backref" href="https://bitbucket.org/PSF/defusedxml#id35" style="color: #3c77b4; font-family: 'Helvetica Neue', Arial, Helvetica, sans-serif; font-size: medium; line-height: 1.5625;"&gt;Related CVEs&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="python"&gt;

&lt;dl class="docutils" style="margin: 10px 0px;"&gt;
&lt;dt style="font-weight: bold; margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;CVE-2013-1664&lt;/span&gt;&lt;/dt&gt;
&lt;dd style="margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Unrestricted entity expansion induces DoS vulnerabilities in Python XML libraries (XML bomb)&lt;/span&gt;&lt;/dd&gt;
&lt;dt style="font-weight: bold; margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;CVE-2013-1665&lt;/span&gt;&lt;/dt&gt;
&lt;dd style="margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;External entity expansion in Python XML libraries inflicts potential security flaws and DoS vulnerabilities&lt;/span&gt;&lt;/dd&gt;&lt;/dl&gt;
&lt;/div&gt;
&lt;div style="margin-top: 10px;"&gt;
&lt;/div&gt;
&lt;h2 style="line-height: 1.5625; margin: 20px 0px 5px;"&gt;
&lt;a class="toc-backref" href="https://bitbucket.org/PSF/defusedxml#id46" style="color: #3c77b4;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif; font-size: small;"&gt;Acknowledgements&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;dl class="docutils" style="margin: 10px 0px;"&gt;
&lt;dt style="font-weight: bold; margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Brett Cannon (Python Core developer)&lt;/span&gt;&lt;/dt&gt;
&lt;dd style="margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;review and code cleanup&lt;/span&gt;&lt;/dd&gt;
&lt;dt style="font-weight: bold; margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Antoine Pitrou (Python Core developer)&lt;/span&gt;&lt;/dt&gt;
&lt;dd style="margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;code review&lt;/span&gt;&lt;/dd&gt;
&lt;dt style="font-weight: bold; margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Aaron Patterson, Ben Murphy and Michael Koziarski (Ruby community)&lt;/span&gt;&lt;/dt&gt;
&lt;dd style="margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Many thanks to Aaron, Ben and Michael from the Ruby community for their report and assistance.&lt;/span&gt;&lt;/dd&gt;
&lt;dt style="font-weight: bold; margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Thierry Carrez (OpenStack)&lt;/span&gt;&lt;/dt&gt;
&lt;dd style="margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Many thanks to Thierry for his report to the Python Security Response Team on behalf of the OpenStack security team.&lt;/span&gt;&lt;/dd&gt;
&lt;dt style="font-weight: bold; margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Carl Meyer (Django)&lt;/span&gt;&lt;/dt&gt;
&lt;dd style="margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Many thanks to Carl for his report to PSRT on behalf of the Django security team.&lt;/span&gt;&lt;/dd&gt;
&lt;dt style="font-weight: bold; margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Daniel Veillard (libxml2)&lt;/span&gt;&lt;/dt&gt;
&lt;dd style="margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Many thanks to Daniel for his insight and assistance with libxml2.&lt;/span&gt;&lt;/dd&gt;
&lt;dt style="font-weight: bold; margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;semantics GmbH (&lt;a class="reference external" href="http://www.semantics.de/" style="color: #3c77b4; text-decoration: initial;"&gt;http://www.semantics.de/&lt;/a&gt;)&lt;/span&gt;&lt;/dt&gt;
&lt;dd style="margin-bottom: 10px;"&gt;&lt;span style="font-family: Helvetica Neue, Arial, Helvetica, sans-serif;"&gt;Many thanks to my employer semantics for letting me work on the issue during working hours as part of semantics's open source initiative.&lt;/span&gt;&lt;/dd&gt;&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=mEuAaPL7awE:FNzZUH2cZ0E:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=mEuAaPL7awE:FNzZUH2cZ0E:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=mEuAaPL7awE:FNzZUH2cZ0E:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=mEuAaPL7awE:FNzZUH2cZ0E:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=mEuAaPL7awE:FNzZUH2cZ0E:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=mEuAaPL7awE:FNzZUH2cZ0E:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=mEuAaPL7awE:FNzZUH2cZ0E:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=mEuAaPL7awE:FNzZUH2cZ0E:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/mEuAaPL7awE" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/2793038509123465737?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/2793038509123465737?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/mEuAaPL7awE/announcing-defusedxml-fixes-for-xml.html" title="Announcing defusedxml, Fixes for XML Security Issues" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2013/02/announcing-defusedxml-fixes-for-xml.html</feedburner:origLink></entry><entry gd:etag="W/&quot;DkQDSXwyfCp7ImA9WhNVEE8.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-8146411477030082995</id><published>2012-12-20T12:26:00.001-05:00</published><updated>2012-12-20T12:26:18.294-05:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2012-12-20T12:26:18.294-05:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="buildbot" /><category scheme="http://www.blogger.com/atom/ns#" term="platforms" /><title>PandaBoard, Raspberry Pi coming to Buildbot fleet</title><content type="html">&lt;b id="internal-source-marker_0.3835159728769213" style="font-weight: normal;"&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;Thanks to the &lt;/span&gt;&lt;a href="http://python.org/psf/"&gt;&lt;span style="color: #1155cc; font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;Python Software Foundation&lt;/span&gt;&lt;/a&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;, a &lt;/span&gt;&lt;a href="http://pandaboard.org/"&gt;&lt;span style="color: #1155cc; font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;PandaBoard&lt;/span&gt;&lt;/a&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt; arrived on Trent Nelson’s desk just in time for the holidays! Santa dropped off the present for python-dev this morning, and there’s a &lt;/span&gt;&lt;a href="http://www.raspberrypi.org/"&gt;&lt;span style="color: #1155cc; font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;Raspberry Pi&lt;/span&gt;&lt;/a&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt; not far behind it.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;On Raymond Hettinger’s recent thread about the memory layout of &lt;/span&gt;&lt;a href="http://mail.python.org/pipermail/python-dev/2012-December/123028.html"&gt;&lt;span style="color: #1155cc; font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;dictionaries&lt;/span&gt;&lt;/a&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;, Barry Warsaw and Christian Heimes shared concerns about how things might look on ARM devices. Christian mentioned the &lt;/span&gt;&lt;a href="http://www.snakebite.net/"&gt;&lt;span style="color: #1155cc; font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;Snakebite&lt;/span&gt;&lt;/a&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt; environment, run by Trent Nelson, but without any ARM machines in the environment, Trent offered to host the boxes if someone donates them.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;Based on the thread’s suggestions and the low cost of the devices, the PSF authorized purchase of a PandaBoard ES, featuring a 1.2 GHz ARM Cortex A9, along with several accessories to get it running. The PSF already had a few Raspberry Pi devices on hand, which come with a 700 MHz ARMv6, so one was dispatched to Trent.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;Thanks to the PSF for making the purchase, and thanks to Trent for offering to set up the machines and add them to the environment!&lt;/span&gt;&lt;/b&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=c-6RjbAraEg:nFRQWgfDEF8:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=c-6RjbAraEg:nFRQWgfDEF8:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=c-6RjbAraEg:nFRQWgfDEF8:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=c-6RjbAraEg:nFRQWgfDEF8:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=c-6RjbAraEg:nFRQWgfDEF8:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=c-6RjbAraEg:nFRQWgfDEF8:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=c-6RjbAraEg:nFRQWgfDEF8:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=c-6RjbAraEg:nFRQWgfDEF8:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/c-6RjbAraEg" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/8146411477030082995?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/8146411477030082995?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/c-6RjbAraEg/pandaboard-raspberry-pi-coming-to.html" title="PandaBoard, Raspberry Pi coming to Buildbot fleet" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2012/12/pandaboard-raspberry-pi-coming-to.html</feedburner:origLink></entry><entry gd:etag="W/&quot;DE8FSH46fSp7ImA9WhNQE04.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-5711013412400247382</id><published>2012-11-19T09:53:00.002-05:00</published><updated>2012-11-19T09:53:39.015-05:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2012-11-19T09:53:39.015-05:00</app:edited><title>New Contributor Experience in Python and other FOSS Communities - A Survey</title><content type="html">&lt;b id="internal-source-marker_0.9831261797808111" style="font-weight: normal;"&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;If you have joined the community of developers contributing to CPython since January 2010, I hope you can find a few spare minutes to participate in a survey being put on by Kevin Carillo. He’s a Ph. D. student at Victoria University of Wellington completing research on new contributors to free and open source projects. Kevin is interested in hearing from everyone from technical to non-technical contributors, whether you had positive or negative experiences.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;The survey is available at &lt;/span&gt;&lt;a href="https://limesurvey.sim.vuw.ac.nz/index.php?sid=65151&amp;amp;lang=en"&gt;&lt;span style="color: #1155cc; font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;https://limesurvey.sim.vuw.ac.nz/index.php?sid=65151&amp;amp;lang=en&lt;/span&gt;&lt;/a&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;Kevin states, “The goal of this research is to understand how a person's experience as a newcomer to a Free/Open Source Software (FOSS) community influences that person's behavior and contributions within that community.” He estimates that the survey will take around 20 minutes to complete.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;Throughout the nearly three year period since January 2010, over 40 &lt;/span&gt;&lt;a href="http://docs.python.org/devguide/developers.html"&gt;&lt;span style="color: #1155cc; font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;committers&lt;/span&gt;&lt;/a&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt; were added and countless others contributed patches, reviews, and bug triage. Since the creation of the &lt;/span&gt;&lt;a href="http://pythonmentors.com/"&gt;&lt;span style="color: #1155cc; font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;Core-Mentors&lt;/span&gt;&lt;/a&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt; group in March 2011, we’ve seen many first timers come through and have their work committed and released.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;We hope that the mentorship group has helped introduce contributors in a positive manner, so we’re looking forward to the results of Kevin’s studies. One of the things Kevin hopes to find is whether or not formal mentorship programs work for introducing contributors. He also looks to find answers to how much community support of newcomers matters, whether formal joining processes involving sponsorship work, and if newcomer specific tasks are the way to go.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;If you have the time, please fill out &lt;/span&gt;&lt;a href="https://limesurvey.sim.vuw.ac.nz/index.php?sid=65151&amp;amp;lang=en"&gt;&lt;span style="color: #1155cc; font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;the survey&lt;/span&gt;&lt;/a&gt;&lt;span style="font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;"&gt;. Python is participating in this survey along with several other groups including Debian, KDE, Gnome, openSUSE, and OpenHatch. Perhaps we can learn a few things and create an even better experience for new contributors!&lt;/span&gt;&lt;/b&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=ICfH8qB5Y0s:SXWcsYAImj0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=ICfH8qB5Y0s:SXWcsYAImj0:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=ICfH8qB5Y0s:SXWcsYAImj0:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=ICfH8qB5Y0s:SXWcsYAImj0:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=ICfH8qB5Y0s:SXWcsYAImj0:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=ICfH8qB5Y0s:SXWcsYAImj0:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=ICfH8qB5Y0s:SXWcsYAImj0:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=ICfH8qB5Y0s:SXWcsYAImj0:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/ICfH8qB5Y0s" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/5711013412400247382?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/5711013412400247382?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/ICfH8qB5Y0s/new-contributor-experience-in-python.html" title="New Contributor Experience in Python and other FOSS Communities - A Survey" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2012/11/new-contributor-experience-in-python.html</feedburner:origLink></entry><entry gd:etag="W/&quot;D0YHR344fCp7ImA9WhNSFkg.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-3913316753800931829</id><published>2012-10-30T23:44:00.000-04:00</published><updated>2012-10-30T23:45:36.034-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2012-10-30T23:45:36.034-04:00</app:edited><title>Python Bug Day this Saturday</title><content type="html">&lt;div class="entry"&gt;
This Saturday, you have the opportunity of participating to the 
Python Bug Day. How would you like to be one of the contributors of 
Python?  If you have ideas for improving parts of the official 
documentation, the standard library, the language itself, or if you have
 a patch waiting for a review that you would like to see committed, or 
if you just want to come and fix an existing bug, it’s your day!&lt;br /&gt;
&lt;br /&gt;
Join us for an effort at closing some Python bugs and feature 
requests.  Get quick feedback on your patches and bugfixes, learn how to
 submit and examine patches, and have fun chatting with the Python 
developers and other contributors.  You don’t need to know the CPython 
codebase or process to join, just Python programming knowledge.&lt;br /&gt;
&lt;br /&gt;
If you live in &lt;a href="http://montrealpython.org/2012/10/python-bug-day/" target="_blank"&gt;Montreal&lt;/a&gt;, come at Caravan to meet fellow hackers and 
take part in a physical sprint!&lt;br /&gt;
&lt;br /&gt;
&lt;b&gt;&lt;a href="http://mpbugday.eventbrite.ca/" target="_blank"&gt;Please register&lt;/a&gt;&lt;a href="http://mpbugday.eventbrite.ca/"&gt;&lt;/a&gt;&lt;/b&gt;
 to let us know how many people to expect.  People from around the world
 are should join the #python-dev IRC channel to participate in the 
bug day.&lt;br /&gt;
&lt;br /&gt;
&lt;div class="line862"&gt;
This page contains all the information you need to get set up, see the list of bugs or learn about IRC: &lt;a href="http://wiki.python.org/moin/PythonBugDay"&gt;http://wiki.python.org/moin/PythonBugDay&lt;/a&gt;&amp;nbsp;&lt;/div&gt;
&lt;div class="line862"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class="line862"&gt;
The goal of the bug day is to process bug reports in &lt;a class="http" href="http://bugs.python.org/"&gt;the Python bug tracker&lt;/a&gt;, trying to &lt;span class="anchor" id="line-50"&gt;&lt;/span&gt;fix and close issues.&amp;nbsp;&lt;/div&gt;
&lt;div class="line862"&gt;
&lt;/div&gt;
&lt;div class="line862"&gt;
&lt;span class="anchor" id="line-51"&gt;&lt;/span&gt;&lt;span class="anchor" id="line-52"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class="line867"&gt;
&lt;span class="anchor" id="line-53"&gt;&lt;/span&gt;&lt;span class="anchor" id="line-54"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class="line867"&gt;
&lt;span class="anchor" id="line-55"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class="line867"&gt;
&lt;span class="anchor" id="line-56"&gt;&lt;/span&gt;&lt;span class="anchor" id="line-57"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class="line867"&gt;
&lt;span class="anchor" id="line-58"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class="line867"&gt;
&lt;span class="anchor" id="line-59"&gt;&lt;/span&gt;&lt;span class="anchor" id="line-60"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class="line874"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class="line874"&gt;
&lt;b&gt;&amp;nbsp;What to do: &lt;/b&gt;&lt;span class="anchor" id="line-61"&gt;&lt;/span&gt;&lt;span class="anchor" id="line-62"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;div class="line862"&gt;
Grab a copy of the Python codebase from Mercurial, following instructions in the &lt;a class="http" href="http://docs.python.org/devguide"&gt;Developer's Guide&lt;/a&gt;, and compile it. &lt;span class="anchor" id="line-63"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="line862"&gt;
If
 you have a problem that isn't in the bug tracker, announce it to the 
IRC channel, and if it's more than five minutes' work, create a bug 
report for it.  See the &lt;a class="http" href="http://docs.python.org/dev/bugs.html"&gt;bug reporting instructions&lt;/a&gt; to learn &lt;span class="anchor" id="line-64"&gt;&lt;/span&gt;how to write bug reports. &lt;span class="anchor" id="line-65"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;When you choose a bug to work on, announce it to the IRC channel (e.g. "I'm &lt;span class="anchor" id="line-66"&gt;&lt;/span&gt;working on #123456.") or on the bug report itself.  This avoids accidentally duplicating work. &lt;span class="anchor" id="line-67"&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Consider
 providing a patch that fixes the problem, or at least a simple test 
case that demonstrates the bug.   Please see the patch submission 
guidelines in the Developer's Guide before submitting a patch. &lt;span class="anchor" id="line-68"&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Does
 the bug appear to be gone in the Python development version (the 
Mercurial branch "default", that will become 3.4), but not the 3.2, 3.3 
or 2.7 maintenance branchs?  Report that, too. &lt;span class="anchor" id="line-69"&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;If someone else has supplied a fix, see if this fix works for² you, and add your results to the bug. &lt;span class="anchor" id="line-70"&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Read the text of proposed patches and assess them for correctness and code quality. &lt;span class="anchor" id="line-71"&gt;&lt;/span&gt;This is usually the most time-consuming step in the bug fixing process, so reading patches &lt;span class="anchor" id="line-72"&gt;&lt;/span&gt;is very useful. &lt;span class="anchor" id="line-73"&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;If there's a working fix, feel free to add a note asking for &lt;span class="anchor" id="line-74"&gt;&lt;/span&gt;the fix to get committed. The bug tracker has a lot of items in it, and it's easy for bugs to be overlooked. &lt;span class="anchor" id="line-75"&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Feature requests should be classified as type 'feature request' in the bug tracker. &lt;/li&gt;
&lt;/ul&gt;
If you need any help beforehand, feel free to ask on &lt;a href="http://mail.python.org/mailman/listinfo/core-mentorship"&gt;core-mentorship mailing-list &lt;/a&gt;&lt;/div&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=YwdJhjL4F0Y:gqJ51WnKXno:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=YwdJhjL4F0Y:gqJ51WnKXno:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=YwdJhjL4F0Y:gqJ51WnKXno:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=YwdJhjL4F0Y:gqJ51WnKXno:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=YwdJhjL4F0Y:gqJ51WnKXno:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=YwdJhjL4F0Y:gqJ51WnKXno:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=YwdJhjL4F0Y:gqJ51WnKXno:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=YwdJhjL4F0Y:gqJ51WnKXno:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/YwdJhjL4F0Y" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/3913316753800931829?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/3913316753800931829?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/YwdJhjL4F0Y/python-bug-day-this-saturday.html" title="Python Bug Day this Saturday" /><author><name>Mathieu Leduc-Hamel</name><uri>http://www.blogger.com/profile/07757697862303956313</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="http://3.bp.blogspot.com/-jkjf-71IKt0/UJCfdRcXweI/AAAAAAAAF3g/T4bUM5ikPJU/s1600/photo.jpg" /></author><georss:featurename>Montreal, QC, Canada</georss:featurename><georss:point>45.5086699 -73.5539925</georss:point><georss:box>45.3306269 -73.8698495 45.6867129 -73.23813550000001</georss:box><feedburner:origLink>http://blog.python.org/2012/10/python-bug-day-this-saturday.html</feedburner:origLink></entry><entry gd:etag="W/&quot;CUIGQ345eyp7ImA9WhNSFU4.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-7481755724147052885</id><published>2012-10-29T13:51:00.000-04:00</published><updated>2012-10-29T13:58:42.023-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2012-10-29T13:58:42.023-04:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="docs" /><title>Updates to docs.python.org</title><content type="html">&lt;div class="document" id="updates-to-docs-python-org"&gt;
If you haven't already noticed, several months ago we updated the Sphinx theme for documentation of versions Python 3.2 and beyond on &lt;a href="http://docs.python.org"&gt;docs.python.org&lt;/a&gt;. It's a more modern look, and it also serves as an indicator that you're looking at documentation for a newer version. Thanks go out to Georg Brandl for his work on Sphinx, Python's documentation, and this new theme!&lt;br /&gt;
&lt;div class="section" id="pep-430"&gt;&lt;br/&gt;
&lt;h4&gt;PEP 430&lt;/h4&gt;&lt;br/&gt;
Over the weekend, &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0430/"&gt;PEP 430&lt;/a&gt; was approved, which changes the default documentation displayed at &lt;a class="reference external" href="http://docs.python.org/"&gt;http://docs.python.org&lt;/a&gt;. See the PEP for full details, but the jist is that we're now promoting the current Python 3 release as the default when you go to the docs home page. However, as the majority use case is still for Python 2 documentation, navigating straight to an unversioned page will present you with the current Python 2 documentation. For example, an unversioned link such as &lt;a class="reference external" href="http://docs.python.org/library/zipfile"&gt;http://docs.python.org/library/zipfile&lt;/a&gt; will bring up the 2.7.3 documentation.&lt;/div&gt;
&lt;div class="section" id="version-dropdown"&gt;&lt;br/&gt;
&lt;h4&gt;Version Dropdown&lt;/h4&gt;&lt;br/&gt;
Supporting that change is a new feature that adds a version dropdown to the top of all documentation pages. Not only does this help when users are brought to a page which they don't expect, but switching between versions is a common operation as more and more projects work to add support for Python 3. &lt;a class="reference external" href="http://bugs.python.org/issue8040"&gt;Issue 8040&lt;/a&gt; is where you'll find discussion on the change and its patches, with the bulk of the work completed by Yury Selivanov with some help from Georg.&lt;br /&gt;&lt;br/&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;
&lt;a href="http://i.imgur.com/GMPHE.png" imageanchor="1" style="margin-left:1em; margin-right:1em"&gt;&lt;img border="0" height="177" width="529" src="http://i.imgur.com/GMPHE.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;br /&gt;
This dropdown is especially handy as you peruse the documentation and come to a page that you want to view in another version. Choosing another version while on any page will load that page's other version, where the latest release of that version is chosen, e.g., 2.7 currently points to 2.7.3. So, as you browse the 2.7.3 built-ins page, choosing 3.3 in the dropdown will bring you to the 3.3.0 built-ins page.&lt;br /&gt;
&lt;br /&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;
&lt;a href="http://i.imgur.com/9Zz7s.png" imageanchor="1" style="margin-left:1em; margin-right:1em"&gt;&lt;img border="0" height="243" width="541" src="http://i.imgur.com/9Zz7s.png" /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;br/&gt;
We hope these changes enhance your experience when browsing the Python documentation!&lt;/div&gt;
&lt;/div&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=0eVUB6TXykc:93UNm5liOJw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=0eVUB6TXykc:93UNm5liOJw:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=0eVUB6TXykc:93UNm5liOJw:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=0eVUB6TXykc:93UNm5liOJw:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=0eVUB6TXykc:93UNm5liOJw:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=0eVUB6TXykc:93UNm5liOJw:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=0eVUB6TXykc:93UNm5liOJw:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=0eVUB6TXykc:93UNm5liOJw:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/0eVUB6TXykc" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/7481755724147052885?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/7481755724147052885?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/0eVUB6TXykc/updates-to-docspythonorg.html" title="Updates to docs.python.org" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2012/10/updates-to-docspythonorg.html</feedburner:origLink></entry><entry gd:etag="W/&quot;CE8EQ3kycCp7ImA9WhJXGUg.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-2687447193492178186</id><published>2012-08-14T10:00:00.000-04:00</published><updated>2012-08-14T10:00:02.798-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2012-08-14T10:00:02.798-04:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="3" /><category scheme="http://www.blogger.com/atom/ns#" term="releases" /><title>Python 3.3 Beta 2 Released</title><content type="html">&lt;div class="document" id="python-3-3-beta-2-released"&gt;

&lt;p&gt;Release manager Georg Brandl announced on August 12 that &lt;a class="reference external" href="http://www.python.org/download/releases/3.3.0/"&gt;the second beta of
CPython 3.3 was released&lt;/a&gt;, complete with installers for both Mac and Windows.
This release represents the final feature set, and the goal is to get it in
the hands of users to iron out any last issues.&lt;/p&gt;
&lt;p&gt;Following this beta will be two release candidates, coming August 25 and
September 8. The final release is slated to happen on September 22.&lt;/p&gt;
&lt;p&gt;The &amp;quot;&lt;a class="reference external" href="http://docs.python.org/dev/whatsnew/3.3.html"&gt;What's New in Python 3.3&lt;/a&gt;&amp;quot; document is currently being finalized by
curator and long time developer Raymond Hettinger. The document already
contains many of the new changes, but keep an eye out for newer versions.&lt;/p&gt;
&lt;p&gt;Here are some of the bigger changes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/dev/peps/pep-0380"&gt;PEP 380&lt;/a&gt;, syntax for delegating to a subgenerator (&amp;quot;yield from&amp;quot;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/dev/peps/pep-0393"&gt;PEP 393&lt;/a&gt;, flexible string representation (doing away with the
distinction between &amp;quot;wide&amp;quot; and &amp;quot;narrow&amp;quot; Unicode builds)&lt;/li&gt;
&lt;li&gt;A &lt;a class="reference external" href="http://bugs.python.org/issue7652"&gt;C implementation of the &amp;quot;decimal&amp;quot; module&lt;/a&gt;, with up to 80x speedup
for decimal-heavy applications&lt;/li&gt;
&lt;li&gt;The import system (__import__) &lt;a class="reference external" href="http://bugs.python.org/issue2377"&gt;now based on importlib&lt;/a&gt; by default&lt;/li&gt;
&lt;li&gt;The new &amp;quot;&lt;a class="reference external" href="http://docs.python.org/dev/library/lzma"&gt;lzma&lt;/a&gt;&amp;quot; module with LZMA/XZ support&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/dev/peps/pep-0397"&gt;PEP 397&lt;/a&gt;, a Python launcher for Windows&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/dev/peps/pep-0405"&gt;PEP 405&lt;/a&gt;, virtual environment support in core&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/dev/peps/pep-0420"&gt;PEP 420&lt;/a&gt;, namespace package support&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/dev/peps/pep-3151"&gt;PEP 3151&lt;/a&gt;, reworking the OS and IO exception hierarchy&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/dev/peps/pep-3155"&gt;PEP 3155&lt;/a&gt;, qualified name for classes and functions&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/dev/peps/pep-0409"&gt;PEP 409&lt;/a&gt;, suppressing exception context&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/dev/peps/pep-0414"&gt;PEP 414&lt;/a&gt;, explicit Unicode literals to help with porting&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/dev/peps/pep-0418"&gt;PEP 418&lt;/a&gt;, extended platform-independent clocks in the &amp;quot;time&amp;quot; module&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/dev/peps/pep-0412"&gt;PEP 412&lt;/a&gt;, a new key-sharing dictionary implementation that
significantly saves memory for object-oriented code&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/dev/peps/pep-0361"&gt;PEP 362&lt;/a&gt;, the function-signature object&lt;/li&gt;
&lt;li&gt;The new &amp;quot;&lt;a class="reference external" href="http://docs.python.org/dev/library/faulthandler"&gt;faulthandler&lt;/a&gt;&amp;quot; module that helps diagnosing crashes&lt;/li&gt;
&lt;li&gt;The new &amp;quot;&lt;a class="reference external" href="http://docs.python.org/dev/library/unittest.mock"&gt;unittest.mock&lt;/a&gt;&amp;quot; module&lt;/li&gt;
&lt;li&gt;The new &amp;quot;&lt;a class="reference external" href="http://docs.python.org/dev/library/ipaddress"&gt;ipaddress&lt;/a&gt;&amp;quot; module&lt;/li&gt;
&lt;li&gt;The &amp;quot;&lt;a class="reference external" href="http://docs.python.org/dev/library/sys#sys.implementation"&gt;sys.implementation&lt;/a&gt;&amp;quot; attribute&lt;/li&gt;
&lt;li&gt;A policy framework for the email package, with a provisional (see
&lt;a class="reference external" href="http://python.org/dev/peps/pep-0411"&gt;PEP 411&lt;/a&gt;) policy that adds much improved unicode support for email
header parsing&lt;/li&gt;
&lt;li&gt;A &amp;quot;&lt;a class="reference external" href="http://docs.python.org/dev/library/collections#collections.ChainMap"&gt;collections.ChainMap&lt;/a&gt;&amp;quot; class for linking mappings to a single unit&lt;/li&gt;
&lt;li&gt;Wrappers for many more POSIX functions in the &amp;quot;os&amp;quot; and &amp;quot;signal&amp;quot;
modules, as well as other useful functions such as &amp;quot;sendfile()&amp;quot;&lt;/li&gt;
&lt;li&gt;Hash randomization, introduced in earlier bugfix releases, is now
switched on by default&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In total, almost 500 API items are new or improved in Python 3.3.&lt;/p&gt;
&lt;p&gt;Be sure to check out this release at &lt;a class="reference external" href="http://www.python.org/download/releases/3.3.0/"&gt;http://www.python.org/download/releases/3.3.0/&lt;/a&gt;
and report any issues to &lt;a class="reference external" href="http://bugs.python.org"&gt;http://bugs.python.org&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=fyJFt5G70x0:bM6oa3IqoU4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=fyJFt5G70x0:bM6oa3IqoU4:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=fyJFt5G70x0:bM6oa3IqoU4:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=fyJFt5G70x0:bM6oa3IqoU4:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=fyJFt5G70x0:bM6oa3IqoU4:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=fyJFt5G70x0:bM6oa3IqoU4:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=fyJFt5G70x0:bM6oa3IqoU4:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=fyJFt5G70x0:bM6oa3IqoU4:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/fyJFt5G70x0" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/2687447193492178186?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/2687447193492178186?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/fyJFt5G70x0/python-33-beta-2-released.html" title="Python 3.3 Beta 2 Released" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2012/08/python-33-beta-2-released.html</feedburner:origLink></entry><entry gd:etag="W/&quot;DUEEQnwycSp7ImA9WhVaEEo.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-3189989434697303505</id><published>2012-06-07T10:00:00.000-04:00</published><updated>2012-06-07T10:00:03.299-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2012-06-07T10:00:03.299-04:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="mercurial" /><title>Mercurial Mirrors Provided by Atlassian</title><content type="html">&lt;div class="document" id="mercurial-mirrors-provided-by-atlassian"&gt;
Long-time friends of the Python community, Atlassian (makers of &lt;a class="reference external" href="http://www.bitbucket.org/"&gt;Bitbucket&lt;/a&gt;) recently made available a mirror of &lt;a class="reference external" href="http://hg.python.org/"&gt;http://hg.python.org&lt;/a&gt;, synchronized hourly, for your cloning and hacking pleasure.&lt;br /&gt;
&lt;br /&gt;
Using &lt;a class="reference external" href="https://bitbucket.org/python_mirrors"&gt;the new mirror&lt;/a&gt; should be very intuitive for current users of the Hg repository -- the projects housed in the mirror follow the same naming convention as the repository they're mirroring. So, the CPython source code is mirrored at &lt;a class="reference external" href="https://bitbucket.org/python_mirrors/cpython"&gt;https://bitbucket.org/python_mirrors/cpython&lt;/a&gt;, corresponding to its canonical home at &lt;a class="reference external" href="http://hg.python.org/cpython"&gt;http://hg.python.org/cpython&lt;/a&gt;.&lt;br /&gt;
&lt;br /&gt;
Since it's hosted on Bitbucket, the collaborative floodgates are effectively flung open. Not only is it dead easy to clone and submit contributions back to the project, you'll also have the ability to follow the project and receive updates in your dashboard. If RSS is more your style, Bitbucket makes it easy to stay up-to-date with changes via each repository's feed.&lt;br /&gt;
&lt;br /&gt;
If you cloned the cpython repo and want to submit your changes to an issue on &lt;a class="reference external" href="http://bugs.python.org/"&gt;http://bugs.python.org&lt;/a&gt;, it's as simple as pasting a link to your Bitbucket clone in the "Remote hg repo" box. The &lt;tt class="docutils literal"&gt;default&lt;/tt&gt; branch is automatically chosen, but appending &lt;tt class="docutils literal"&gt;#branchname&lt;/tt&gt; to the end of your link will choose that branch.&lt;br /&gt;
&lt;img alt="http://i.imgur.com/6popx.png" src="http://i.imgur.com/6popx.png" /&gt;
&lt;br /&gt;
See how easy it is to get your changes associated with an issue? If you're interested in getting started with CPython development, check out our &lt;a class="reference external" href="http://docs.python.org/devguide"&gt;developer guide&lt;/a&gt;.&lt;br /&gt;
&lt;hr class="docutils" /&gt;
Atlassian has been a user of Python and supporter of the Python community for some time now. They've sponsored PyCons around the world as well as events at those conferences, from the CodeWars competitions during PyCon AU to the recent PyLadies party at PyCon US!&lt;br /&gt;
&lt;br /&gt;
Thanks, Atlassian!&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=TKMQ7tK4z0c:8G3frAu_Ep0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=TKMQ7tK4z0c:8G3frAu_Ep0:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=TKMQ7tK4z0c:8G3frAu_Ep0:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=TKMQ7tK4z0c:8G3frAu_Ep0:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=TKMQ7tK4z0c:8G3frAu_Ep0:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=TKMQ7tK4z0c:8G3frAu_Ep0:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=TKMQ7tK4z0c:8G3frAu_Ep0:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=TKMQ7tK4z0c:8G3frAu_Ep0:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/TKMQ7tK4z0c" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/3189989434697303505?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/3189989434697303505?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/TKMQ7tK4z0c/mercurial-mirrors-provided-by-atlassian.html" title="Mercurial Mirrors Provided by Atlassian" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2012/06/mercurial-mirrors-provided-by-atlassian.html</feedburner:origLink></entry><entry gd:etag="W/&quot;C0cEQXk_eyp7ImA9WhVbFUs.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-4549858082108157787</id><published>2012-06-01T10:30:00.000-04:00</published><updated>2012-06-01T10:30:00.743-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2012-06-01T10:30:00.743-04:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="3" /><category scheme="http://www.blogger.com/atom/ns#" term="releases" /><title>Python 3.3 Alpha 4 Released</title><content type="html">&lt;div class="document" id="python-3-3-alpha-4-released"&gt;
&lt;p&gt;Yesterday, May 31, brought the &lt;a class="reference external" href="http://www.python.org/download/releases/3.3.0/"&gt;fourth alpha release&lt;/a&gt; in the Python 3.3 development schedule. It's an exciting release as it introduces a number of long awaited features that we really hope the community will enjoy.&lt;/p&gt;
&lt;div class="section" id="new-features"&gt;
&lt;h4&gt;New Features&lt;/h4&gt;
&lt;div class="section" id="pep-405-virtual-environments"&gt;
&lt;h5&gt;PEP 405 - Virtual Environments&lt;/h5&gt;
&lt;p&gt;Just in time for Alpha 4 comes the addition of &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0405/"&gt;PEP 405&lt;/a&gt;'s support for virtual environments by way of the &lt;tt class="docutils literal"&gt;venv&lt;/tt&gt; module and &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; script.&lt;/p&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;python &lt;span class="pre"&gt;-m&lt;/span&gt; venv /home/yourname/dev/myproject&lt;/tt&gt;&lt;/blockquote&gt;
&lt;p&gt;You may know this functionality through &lt;a class="reference external" href="http://www.virtualenv.org/en/latest/index.html"&gt;virtualenv&lt;/a&gt;, originally created by Ian Bicking. Thanks to Carl Meyer, Vinay Sajip, and anyone else for working on the PEP and implementation, we now have this widely used functionality available in a Python release!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pep-420-namespace-packages"&gt;
&lt;h5&gt;PEP 420 - Namespace Packages&lt;/h5&gt;
&lt;p&gt;After a long road featuring two preceding PEPS (&lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0382/"&gt;382&lt;/a&gt; and &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0402/"&gt;402&lt;/a&gt;), several sprints (including one &lt;a class="reference external" href="http://pythonsprints.com/2011/06/16/pep-382-sprint-maryland/"&gt;sponsored by the PSF&lt;/a&gt;), and much discussion on python-dev, import-sig, and at PyCon language summits over the last two years, namespace packages are here. At &lt;a class="reference external" href="http://blog.python.org/2012/03/2012-language-summit-report.html"&gt;the summit&lt;/a&gt;, Eric Smith stepped up to write a new PEP after the group decided to reject PEPs 382 and 402.&lt;/p&gt;
&lt;p&gt;The result is &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0420/"&gt;PEP 420&lt;/a&gt;. The most obvious feature of a namespace package is the lack of a &lt;tt class="docutils literal"&gt;__init__.py&lt;/tt&gt; file. However, there's a lot more to it, so check out the PEP!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pep-3144-the-ipaddress-module"&gt;
&lt;h5&gt;PEP 3144 - The ipaddress Module&lt;/h5&gt;
&lt;p&gt;After discussion starting during the Python 3.2 development cycle, the

&lt;tt class="docutils literal"&gt;ipaddress&lt;/tt&gt; module has a new home in the standard library for 3.3.

&lt;a class="reference external" href="http://www.python.org/dev/peps/pep-3144/"&gt;PEP 3144&lt;/a&gt;, authored by Peter Moody and taken up by core contributor Nick Coghlan, introduces a collection of classes for working with addresses, networks, and interfaces for both IPv4 and IPv6.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="windows-build-upgraded-to-visual-studio-2010"&gt;
&lt;h5&gt;Windows Build Upgraded to Visual Studio 2010&lt;/h5&gt;
&lt;p&gt;As was &lt;a class="reference external" href="http://blog.python.org/2012/05/recent-windows-changes-in-python-33.html"&gt;recently covered&lt;/a&gt;, the Alpha 4 Windows installers now feature binaries produced by Visual Studio 2010, up from the 2008 version. We needed to upgrade to keep up with what most organizations and many of our contributors were using, along with the fact that &lt;em&gt;not changing&lt;/em&gt; would mean we'd be at least two versions behind at our next opportunity to do so. With Python 3.4 not coming out until some time in 2014, we didn't want to end up eight years behind the curve and have to make that big of a version jump.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="bug-fixes"&gt;
&lt;h4&gt;Bug Fixes&lt;/h4&gt;
&lt;p&gt;As with all of our releases, many contributors submitted patches to fix over 80 issues since last month's Alpha 3. We have fixes across a number of modules, including batches of fixes to &lt;a class="reference external" href="http://docs.python.org/dev/library/idle.html"&gt;IDLE&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org/dev/library/email.html"&gt;email&lt;/a&gt;, and &lt;a class="reference external" href="http://docs.python.org/dev/library/urllib.request.html"&gt;urllib&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="we-need-your-help"&gt;
&lt;h4&gt;We Need Your Help!&lt;/h4&gt;
&lt;p&gt;As with all of our releases, backwards compatibility is important to us, so we'd love to hear if any of your projects have issues. Please help us make the best release possible by &lt;a class="reference external" href="http://www.python.org/download/releases/3.3.0/"&gt;trying it out&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Python 3.3 is quickly shaping up to be the release everyone's waiting for, so run your tests and report your issues to &lt;a class="reference external" href="http://bugs.python.org"&gt;http://bugs.python.org&lt;/a&gt;.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.python.org/download/releases/3.3.0/"&gt;Download it now&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=rUOAjDbK18A:ezJqXnlP8Gg:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=rUOAjDbK18A:ezJqXnlP8Gg:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=rUOAjDbK18A:ezJqXnlP8Gg:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=rUOAjDbK18A:ezJqXnlP8Gg:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=rUOAjDbK18A:ezJqXnlP8Gg:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=rUOAjDbK18A:ezJqXnlP8Gg:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=rUOAjDbK18A:ezJqXnlP8Gg:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=rUOAjDbK18A:ezJqXnlP8Gg:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/rUOAjDbK18A" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/4549858082108157787?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/4549858082108157787?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/rUOAjDbK18A/python-33-alpha-4-released.html" title="Python 3.3 Alpha 4 Released" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2012/06/python-33-alpha-4-released.html</feedburner:origLink></entry><entry gd:etag="W/&quot;D0AGQn04eSp7ImA9WhVUGEo.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-2117644518967524777</id><published>2012-05-24T11:00:00.000-04:00</published><updated>2012-05-24T12:08:43.331-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2012-05-24T12:08:43.331-04:00</app:edited><title>Recent Windows Changes in Python 3.3</title><content type="html">&lt;div class="document" id="recent-windows-changes-in-python-3-3"&gt;
The Windows build of Python 3.3 has recently seen changes that could use a look from the community throughout our alpha and beta cycle. The first change is the long requested addition of Python to the system &lt;tt class="docutils literal"&gt;Path&lt;/tt&gt; variable, which was completed in the installer. Secondly, the build was upgraded to Visual Studio 2010.&lt;br /&gt;
&lt;br /&gt;
&lt;div class="section" id="python-on-the-path"&gt;
&lt;h4&gt;


Python on the Path&lt;/h4&gt;
A long requested feature, especially from beginners to those involved in education and training, has been the ability for the Python installer to place itself in the system &lt;tt class="docutils literal"&gt;Path&lt;/tt&gt; environment variable. Having the following message appear when you try to run a simple exercise is not a great first experience:&lt;br /&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;'python' is not recognized as an internal or external command, operable program or batch file.&lt;/tt&gt;&lt;/blockquote&gt;
Because of that, the first post-install step by many users is to edit the &lt;tt class="docutils literal"&gt;Path&lt;/tt&gt; environment variable manually to insert the C:Python33 directory. This allows the user to simply type &lt;tt class="docutils literal"&gt;python&lt;/tt&gt; on the command line and have it open &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C:\\Python33\\python.exe&lt;/span&gt;&lt;/tt&gt; -- a very desirable feature for a majority of users. In fact, it's such a common post-install step that there are a huge amount of tutorials either about this step by itself or tutorials where their setup introduces this step before moving on.&lt;br /&gt;
&lt;blockquote&gt;
&lt;img alt="http://i.imgur.com/aixuY.png" src="http://i.imgur.com/aixuY.png" /&gt;
&lt;/blockquote&gt;
The easiest part of the whole thing was &lt;a class="reference external" href="http://hg.python.org/cpython/rev/4e9f1017355f"&gt;the code&lt;/a&gt;. &lt;tt class="docutils literal"&gt;Path&lt;/tt&gt; manipulation in the installer consists of adding a new feature to the Feature table, then the Environment table may be updated based on selection of the Path feature. If the feature was selected, the Environment table is modified in a way that the &lt;tt class="docutils literal"&gt;Path&lt;/tt&gt; is prepended to and will be correctly cleaned up on uninstallation.&lt;br /&gt;
&lt;br /&gt;
The harder part was deciding how to go about the change. If you're going to provide &lt;tt class="docutils literal"&gt;Path&lt;/tt&gt; manipulation, the major questions are to do it by default or not, and to prepend or append to the &lt;tt class="docutils literal"&gt;Path&lt;/tt&gt;.&lt;br /&gt;
&lt;br /&gt;
We decided that it wasn't appropriate to make this a default feature. For one, in the dual-version state many users are running in, we run the risk of users running through the installer and putting their system into a state they aren't prepared for. We don't want to change the meaning of &lt;tt class="docutils literal"&gt;python&lt;/tt&gt; when executed on the command line without the user asking for it. On one hand it's a very beginner focused feature in that it gets a first-timer successfully up and running with ease. However, it's also an advanced feature in that it takes a good understanding of what it's going to do to the users who have 2.6, 2.7, 3.2, and now 3.3 on their machines. We think the best solution for all is to leave it up to them and include an explanation.&lt;br /&gt;
&lt;br /&gt;
The other part we had to think about was whether to prepend or append to the path. While some believe that appending to the path is the more friendly way to work with the system, it would seem to be of limited utility given that the feature is added this late in the game. Instead we went the route of prepending the installation folder, e.g., C:\Python33, in order to make sure this feature is actually useful to our users.&lt;br /&gt;
&lt;br /&gt;
If you have questions or comments, please feel free to raise them on python-dev or see  &lt;a class="reference external" href="http://bugs.python.org/issue3561"&gt;Issue 3561&lt;/a&gt;.&lt;br /&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class="section" id="transition-to-visual-studio-2010"&gt;
&lt;h4&gt;


Transition to Visual Studio 2010&lt;/h4&gt;
In time for the last alpha release, we've updated our build tools from Visual Studio 2008 to 2010.&lt;br /&gt;
Many potential contributors as well as general Python users have long moved to work environments that use Visual Studio 2010. During a "bug day" some months ago, we had two or three patches come from interested first-timers who found our VS2008 solution not working in VS2010. Over time we received a few more contributions and bug reports on the topic, as well as some chatter in IRC about being behind the curve.&lt;br /&gt;
&lt;br /&gt;
On top of that, my employer at the time moved to VS2010 as well as the employers of at least one other core maintainer, so we were already operating on ports for our companies.&lt;br /&gt;
&lt;br /&gt;
When it came time to think about what to do for Python 3.3, moving to VS2010 became a &lt;em&gt;must have&lt;/em&gt; due to our release schedule. Staying with VS2008 for 3.3 would put us into the middle of 2014 as the next time we could release on a new version. That would leave us at least two versions behind, with VS2010 as well as VS11 being available by then.&lt;br /&gt;
&lt;br /&gt;
Another reason is the relative ease of porting between VS2010 and VS11. Once we got ourselves on to 2010, moving on to 11 would not be that hard. VS11 currently reads our VS2010 files without change if you want to use the IDE features of VS11. However, there'd need to be another port in order to use the VS11 compiler suite, but it seems to require minimal effort. Just following the VS11 wizard produced a functioning executable, although it didn't build cleanly.&lt;br /&gt;
&lt;br /&gt;
&lt;div class="section" id="where-to-get-visual-studio-2010"&gt;
&lt;h5&gt;


Where to get Visual Studio 2010?&lt;/h5&gt;
As usual, Microsoft provides a zero-cost version of Visual Studio 2010 in the name Visual C++ Express, available at &lt;a class="reference external" href="http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-cpp-express"&gt;http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-cpp-express&lt;/a&gt;. While there are &lt;a class="reference external" href="http://msdn.microsoft.com/en-us/library/hs24szh9(v=vs.100).aspx"&gt;some differences&lt;/a&gt; between the Express version and the for-purchase versions, the Express version is used successfully by many contributors.&lt;br /&gt;
&lt;br /&gt;
The fine folks at Microsoft's &lt;a class="reference external" href="http://www.microsoft.com/en-us/openness/default.aspx#home"&gt;Open Source Technology Center&lt;/a&gt; have provided the core contributors with MSDN licenses free of charge, allowing for access to the full versions of Visual Studio among other products. The full versions of Visual Studio support 64-bit compilation which comes in handy for our amd64 releases, which have been available since 2.5.&lt;br /&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="help-us-out-try-the-alphas-and-betas"&gt;
&lt;h4&gt;


Help us out -- try the alphas and betas!&lt;/h4&gt;
With a change to the installer, a new build system, and the &lt;a class="reference external" href="http://docs.python.org/dev/whatsnew/3.3.html"&gt;other great changes&lt;/a&gt; we have in store, the more feedback we hear from the community during the development cycle, the better we can make this release. If you have a chance to run your projects on Python 3.3, &lt;a class="reference external" href="http://bugs.python.org/"&gt;http://bugs.python.org&lt;/a&gt; is always open for your reports. You've even got a month to get feature requests in and completed!&lt;br /&gt;
&lt;br /&gt;
The last alpha release is scheduled for this weekend, and the first beta release is scheduled for June 24. You can download our 3.3.0 releases at &lt;a class="reference external" href="http://www.python.org/download/releases/3.3.0/"&gt;http://www.python.org/download/releases/3.3.0/&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=rWPwayEXWfE:cAxThx2AZbA:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=rWPwayEXWfE:cAxThx2AZbA:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=rWPwayEXWfE:cAxThx2AZbA:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=rWPwayEXWfE:cAxThx2AZbA:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=rWPwayEXWfE:cAxThx2AZbA:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=rWPwayEXWfE:cAxThx2AZbA:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=rWPwayEXWfE:cAxThx2AZbA:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=rWPwayEXWfE:cAxThx2AZbA:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/rWPwayEXWfE" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/2117644518967524777?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/2117644518967524777?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/rWPwayEXWfE/recent-windows-changes-in-python-33.html" title="Recent Windows Changes in Python 3.3" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2012/05/recent-windows-changes-in-python-33.html</feedburner:origLink></entry><entry gd:etag="W/&quot;CEINRHs5cCp7ImA9WhVSF0U.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-8622102854864570782</id><published>2012-03-14T10:05:00.000-04:00</published><updated>2012-03-14T23:36:35.528-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2012-03-14T23:36:35.528-04:00</app:edited><title>2012 Language Summit Report</title><content type="html">&lt;div class="document" id="language-summit-report"&gt;
This year's Language Summit took place on Wednesday March 7 in Santa Clara, CA before the start of &lt;a class="reference external" href="https://us.pycon.org/2012/"&gt;PyCon 2012&lt;/a&gt;. As with previous years, in attendance were members of the various Python VMs, packagers from various Linux distributions, and members of several community projects.&lt;br /&gt;&lt;br /&gt;
&lt;div class="section" id="the-namespace-peps"&gt;
&lt;h4&gt;
The Namespace PEPs&lt;/h4&gt;
The summit began with a discussion on PEPs &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0382/"&gt;382&lt;/a&gt; and &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0402/"&gt;402&lt;/a&gt;, with Barry Warsaw leading much of the discussion. After some discussion, the decision was ultimately deferred with what appeared to be a want for parts of both PEPs.&lt;br /&gt;
&lt;br /&gt;
As of Monday at the PyCon sprints, both PEPs have been rejected (see the Rejection Notice at the top of each PEP). Martin von Loewis &lt;a class="reference external" href="http://mail.python.org/pipermail/import-sig/2012-March/000421.html"&gt;posted to the import-sig list&lt;/a&gt; that a resolution has been found and Eric Smith will draft a new PEP on the ideas agreed upon there. Effectively, PEP 382 has been outright rejected, while portions of PEP 402 will be accepted.&lt;/div&gt;
&lt;br /&gt;
&lt;div class="section" id="importlib-status"&gt;
&lt;h4&gt;
&lt;tt class="docutils literal"&gt;importlib&lt;/tt&gt; Status&lt;/h4&gt;
Brett Cannon announced that there is a completed and available branch of CPython using importlib at &lt;a class="reference external" href="http://hg.python.org/sandbox/bcannon/"&gt;http://hg.python.org/sandbox/bcannon/&lt;/a&gt;. See the &lt;tt class="docutils literal"&gt;bootstrap_importlib&lt;/tt&gt; named branch.&lt;br /&gt;
&lt;br /&gt;
Discussion began by outlining the only real existing issue, which lies in &lt;tt class="docutils literal"&gt;stat&lt;/tt&gt;'ing of directories. There's a minor backwards incompatibility issue with time granularity. However, everyone agreed that it's so unlikely to be of issue that it's not a showstopper and the work can move forward. Additionally, there was an optimization made around the &lt;tt class="docutils literal"&gt;stat&lt;/tt&gt; calls, which was arrived at independently by each of Brett, Antoine Pitrou, and P.J. Eby.&lt;br /&gt;
&lt;br /&gt;
The topic of performance came up and Brett explained that the current pure-Python implementation is around 5% slower. Thomas Wouters exclaimed that 5% slower is actually really good, especially given some recent benchmark work he was doing showing that changing compilers sometimes shows a 5% difference in startup time. There was a shared feeling that 5% slower was not something to hold up integration of the code, which pushed discussion happily along.&lt;br /&gt;
&lt;br /&gt;
Brett went on to explain what the bootstrapping actually looks like, even asserting that the implementation finds what could be the first &lt;em&gt;real&lt;/em&gt; use of frozen modules! Guido's first response was, "you mean to tell me that after 20 years we finally found a use for freezing code?"&lt;br /&gt;
&lt;br /&gt;
&lt;tt class="docutils literal"&gt;importlib._bootstrap&lt;/tt&gt; is a frozen module containing the necessary builtins to operate, along with some re-implementations of a small number of functions. Some of the libraries included in the frozen module are &lt;tt class="docutils literal"&gt;warnings&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;_os&lt;/tt&gt; (select code from &lt;tt class="docutils literal"&gt;posix&lt;/tt&gt;), and &lt;tt class="docutils literal"&gt;marshal&lt;/tt&gt;.&lt;br /&gt;
&lt;br /&gt;
Another compatibility issue was brought up, but again, was decided to be an issue unworthy of halting the progress on this issue. There's a negative level count which is not supported in &lt;tt class="docutils literal"&gt;importlib&lt;/tt&gt;, used in implicit relative imports, and it was agreed that it's acceptable to continue not supporting it.&lt;br /&gt;
&lt;br /&gt;
The future will likely result in a strip down of &lt;tt class="docutils literal"&gt;import.c&lt;/tt&gt;, as well as the exposure of numerous hooks as well as exposure of much of the &lt;tt class="docutils literal"&gt;importlib&lt;/tt&gt; API.&lt;br /&gt;
&lt;br /&gt;
As for merging with the &lt;tt class="docutils literal"&gt;default&lt;/tt&gt; branch, it was pretty universally agreed upon that this should happen for 3.3 and it should happen soon in order to get mileage on the implementation throughout the alpha and beta cycles. Since this will be happening shortly, Brett is going to follow-up to python-dev with some cleanup details and look for reviews.&lt;/div&gt;
&lt;br /&gt;
&lt;div class="section" id="release-schedule-peps"&gt;
&lt;h4&gt;
Release Schedule PEPs&lt;/h4&gt;
Discussion on PEPs &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0407/"&gt;407&lt;/a&gt; and &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0413/"&gt;413&lt;/a&gt; followed the &lt;tt class="docutils literal"&gt;importlib&lt;/tt&gt; talk. Like the namespace PEP discussion, several ideas were tossed around but the group didn't arrive at any conclusion on acceptability of the PEPs.&lt;br /&gt;
&lt;br /&gt;
Immediately, the idea of splitting out the standard library to be on its own was resurrected, which could lend itself to both PEPs. Some questions remain, namely in where would the test suite live. Additionally, there may need to be some distinction between the tests which cover standard libraries versus the tests which cover language features.&lt;br /&gt;
&lt;br /&gt;
The topic of versioning came up, with three distinctions needing to be made. We would seem to need a version of the language spec, a version of the implementation, and a version of the standard library.&lt;br /&gt;
&lt;br /&gt;
Many commenters mentioned that these PEPs make things too complicated. Additionally, there was a question about whether there are enough users who care about either of these changes being made. Several of us stated that &lt;em&gt;we&lt;/em&gt; could use the quicker releases, but with so many users being stuck on old versions for one reason or another, there was a wonder of who would take the releases.&lt;br /&gt;
&lt;br /&gt;
Thomas Wouters mentioned a good point about the difficulty in lining up the so-called Python "LTS" releases with other Python consumers who do similar LTS-style releases. Ubuntu and their LTS schedule was a prime example, as well as the organizations who plan releases atop something like Ubuntu. Many of the Linux distribution packagers in attendance seemed to agree.&lt;br /&gt;
&lt;br /&gt;
One thing that seemed to have broad agreement was that shortening the standard library turnaround time would be a good thing in terms of new contributors. Few people are interested in writing new features that might not be released for over a year -- it's just not fun. Even with bug fixes, sometimes the duration can be seen as too long, to the point where users may end up just fixing our problems from within their own code if possible.&lt;br /&gt;
&lt;br /&gt;
Guido went on to make a comment about how we hope to avoid the mindset some have of "my package isn't accepted until it's in the standard library". The focus continues to be on projects being hosted on PyPI, being successful out in the wild, then vetted for acceptance in the standard library after maturity of the project and its APIs.&lt;br /&gt;
&lt;br /&gt;
It was suggested that perhaps speeding up bug fix releases could be a good move, but we would need to check with release managers to ensure they're on board and willing to expend the effort to produce more frequent releases. As with the new feature releases, we need to be sure there's an audience to take the new bug fixes.&lt;br /&gt;
&lt;br /&gt;
There was also some discussion about what have previously been called "sumo" releases. Given that some similar releases are already made by third-party vendors, the idea didn't seem to gain much traction.&lt;/div&gt;
&lt;br /&gt;
&lt;div class="section" id="funding-from-the-python-software-foundation"&gt;
&lt;h4&gt;
Funding from the Python Software Foundation&lt;/h4&gt;
PSF Chairman Steve Holden joined the group after lunch to mention that the foundation has resources available to assist development efforts, especially given the sponsorship success of this year's conference. While the foundation can't and won't dictate what should be coded up, they're open to proposals about the types of work to be funded.&lt;br /&gt;
&lt;br /&gt;
Steve and Jesse Noller were adamant about the support not only being for all Python implementations, but also for third-party projects. What's needed to begin funding for a project is a concrete proposal on what will be accomplished. They stressed that the money is ready and waiting -- proposals are the way to unlock it.&lt;br /&gt;
&lt;br /&gt;
Some ideas for how to use the funding came from Steve but also from around the room. One idea which started off the discussion was the idea of funding one-month sabbaticals. Then comes the issue of who might be available. Some suggested that freelance consultants in the development community might be the ones we should try to engage. Those with full-time employment may find it harder to acquire such a sabbatical, but the possibility is open to anyone.&lt;br /&gt;
Another thought was potential funding of someone to do spurts of full-time effort on the bug tracker, ideally someone already involved in the triage effort. This type of funding would hope to put an end to the times when it takes three days to fix a bug and three years for the patch to be accepted. Some thought this might be a nice idea in the short term, but it could be tough work and burn out the individual(s) involved. If anyone is up for it, they're encouraged to propose the idea to the foundation.&lt;br /&gt;
&lt;br /&gt;
Along similar lines of tracker maintenance, Glyph Lefkowitz of the Twisted project had an idea to fund code reviews over code-writing efforts. Some thought this might be a good way to push forward the &lt;tt class="docutils literal"&gt;regex&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;re&lt;/tt&gt; situation, given that the &lt;tt class="docutils literal"&gt;regex&lt;/tt&gt; is very large and most felt that the only thing holding it back from some form of inclusion is an in-depth review. The &lt;tt class="docutils literal"&gt;cdecimal&lt;/tt&gt; module was mentioned as another project that could use some review assistance.&lt;br /&gt;
&lt;br /&gt;
The code review funding is also an idea to push forward some third-party project's ports to Python 3, specifically including Twisted, which the group felt was an effort which should receive some of this funding.&lt;br /&gt;
&lt;br /&gt;
Along the way it was remarked that the &lt;a class="reference external" href="http://pythonmentors.com/"&gt;core-mentors&lt;/a&gt; group has been a success in involving new contributors. Kudos to those involved with that list.&lt;/div&gt;
&lt;br /&gt;
&lt;div class="section" id="virtualenv-inclusion"&gt;
&lt;h4&gt;
&lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; Inclusion&lt;/h4&gt;
In about two minutes, discussion on PEP &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0405/"&gt;405&lt;/a&gt; came and went. Carl Meyer mentioned that a reference implementation is available and is working pretty well. A look from the OSX maintainers would be beneficial, and both Ned Deily and Ronald Oussoren were in attendance. It seemed like one of the only things left in terms of the PEP was to find someone to make a declaration on it, and Thomas Wouters put his name out there if Nick Coghlan wasn't going to do t (update: Nick will be the PEP czar).&lt;/div&gt;
&lt;br /&gt;
&lt;div class="section" id="pep-397-inclusion"&gt;
&lt;h4&gt;
PEP 397 Inclusion&lt;/h4&gt;
Without much of a Windows representation at the summit, discussion was fairlyquick, but it was pretty much agreed that PEP &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0397/"&gt;397&lt;/a&gt; was something we should accept. Brian Curtin spoke in favor of the PEP, as well as mentioning ongoing work on the Windows installer to optionally add the executable's directory to the Path.&lt;br /&gt;
&lt;br /&gt;
After discussion outside of the summit, it was additionally agreed upon that the launcher should be installed via the 3.3 Windows installer, while it can also live as a standalone installer for those not taking 3.3. Additionally, there needs to be some work done on the PEP to remove much of the low-level detail that is coupled too tightly with the implementation, e.g., explaining of the location of the &lt;tt class="docutils literal"&gt;py.ini&lt;/tt&gt; file.&lt;/div&gt;
&lt;br /&gt;
&lt;div class="section" id="speed-python-org"&gt;
&lt;h4&gt;
speed.python.org&lt;/h4&gt;
After generous hardware donations, the &lt;a class="reference external" href="http://speed.python.org/"&gt;http://speed.python.org&lt;/a&gt; site has gone live and is currently running PyPy benchmarks. We need to make a decision on what benchmarks can be used as well as what benchmarks &lt;em&gt;should&lt;/em&gt; be used when it comes to creating a Python 3 suite. As we get implementations on Python 3 we'll want to scale back 2.7 testing and push forward with 3.x.&lt;br /&gt;
&lt;br /&gt;
The project suffers not from a technological problem but from a personnel problem, which was thought to be another area that funding could be used for. However, even if money is on the table, we still need to find someone with the time, the know-how, and the drive to complete the task. Ideally the starting task would be to get PyPy and CPython implementations running and comparing. After that, there are a number of infrastructure tasks in line.&lt;/div&gt;
&lt;br /&gt;
&lt;div class="section" id="pep-411-inclusion"&gt;
&lt;h4&gt;
PEP 411 Inclusion&lt;/h4&gt;
PEP &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0411/"&gt;411&lt;/a&gt; proposes the inclusion of provisional packages into the standard library. The recently discussed &lt;tt class="docutils literal"&gt;regex&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;ipaddr&lt;/tt&gt; modules were used as examples of libraries to include under this PEP. As for how this inclusion should be implemented and denoted to users was the major discussion point.&lt;br /&gt;
&lt;br /&gt;
It was first suggested that documentation notes don't work -- we can't rely only on documentation to be the single notification point, especially for this type of code inclusion. Other thoughts were some type of flag on the library to specify its experimental status. Another thought was to emit a warning on import of a provisional library, but it's another thing that we'd likely want to silence by default in order to not affect user code in the hopes that developers are running their test suite with warnings enabled. However, as with other times we've gone down this path, we run the risk of developers just disabling warnings all together if they become annoying.&lt;br /&gt;
&lt;br /&gt;
As has been suggested on python-dev, importing a provisional library from a special package, e.g., &lt;tt class="docutils literal"&gt;from __experimental__ import foo&lt;/tt&gt;, was pretty strongly discouraged. If the library gains a consistent API, it penalizes users once it moves from provisional status to being officially accepted. Aliasing just exacerbates the problem.&lt;br /&gt;
&lt;br /&gt;
The PEP boils down to being about process, and we need to be sure that libraries being included use the ability to change APIs very carefully. We also need to make people, especially the library author, aware of the need to be responsive to feedback and open to change as the code reaches a wider audience.&lt;br /&gt;
&lt;br /&gt;
Looking back, Jesse Noller suggested &lt;tt class="docutils literal"&gt;multiprocessing&lt;/tt&gt; would have been a good candidate for something like this PEP is suggesting. Around this time, it was suggested that Michael Foord's &lt;a class="reference external" href="http://www.voidspace.org.uk/python/mock/"&gt;mock&lt;/a&gt; could gain some provisional inclusion within &lt;tt class="docutils literal"&gt;unittest&lt;/tt&gt;, perhaps as &lt;tt class="docutils literal"&gt;unittest.mock&lt;/tt&gt;. Instead, given &lt;tt class="docutils literal"&gt;mock&lt;/tt&gt;'s stable API and wide use among us, along with the need for a mocking library within our own test suite, it was agreed to just accept it directly into the standard library without any provisional status.&lt;br &gt;
&lt;br /&gt;
While on the topic of ``regex``'s role within the PEP came an idea from Thomas Wouters that ``regex`` be introduced into the standard library, bypassing any provisional status. From there, the previously known ``re`` module could be moved to the ``sre`` name, and there didn't appear to be any dissenting opinion there.&lt;br /&gt;
&lt;br /&gt;
It should also be noted to users of provisional libraries that the library maintainers would need to exercise extreme care and be very conservative in changing of the APIs. The last thing we want to do is introduce a good library but as a moving target to its users.&lt;br /&gt;
&lt;/div&gt;
&lt;br /&gt;
&lt;div class="section" id="keyword-arguments-on-all-builtin-functions"&gt;
&lt;h4&gt;
Keyword Arguments on all builtin functions&lt;/h4&gt;
As recently came up on the tracker, it was suggested that wider use of keyword arguments in our APIs would likely be a good thing. Gregory P. Smith suggested that we leave single-argument APIs alone, which was agreed upon. However, the overall change got some push back as "change for change's sake".&lt;br /&gt;
&lt;br /&gt;
In order to support this, the &lt;tt class="docutils literal"&gt;PyArg_ParseTuple&lt;/tt&gt; function would need to do more work, and it's already known to be somewhat slow. Alternatively, &lt;tt class="docutils literal"&gt;PyArg_Parse&lt;/tt&gt; is much faster, and the tuple version could take a thing or two from it regardless of any wide scale change to builtins.&lt;br /&gt;
&lt;br /&gt;
There does exist some potential break in compatibility when replacing a builtin function with a Python one, where positional-only arguments suddenly get a potentially conflicting name.&lt;br /&gt;
&lt;br /&gt;
It was widely agreed upon that we should avoid any blanket rules and keep changes to places where it makes sense rather than make wholesale changes. We also need to be mindful of documentation and doc strings being kept to match the actual keyword argument names as well as keep them in sync.&lt;br /&gt;
&lt;br /&gt;
OrderedDict was suggested as the container for keyword arguments, but Guido and Gregory were unsure of use-cases for that. Whether or not we use a traditional or ordered dictionary, it was suggested that we could possibly use a decorator to handle some of this. We could even go as far as exposing something like &lt;tt class="docutils literal"&gt;PyArg_ParseTuple&lt;/tt&gt; as a Python-level function.&lt;br /&gt;
&lt;br /&gt;
PEP &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0362/"&gt;362&lt;/a&gt;, a proposal for a function signature object, would help here and with decorators in general. It seems that all that's left with that PEP is another look and someone to declare on it.&lt;/div&gt;
&lt;br /&gt;
&lt;div class="section" id="porting-to-python-3"&gt;
&lt;h4&gt;
Porting to Python 3&lt;/h4&gt;
We moved on to talk about Python 3 porting, starting with the current strategies and how they're working out. Single-codebase porting is working better than expected for most of us, although &lt;tt class="docutils literal"&gt;except&lt;/tt&gt; handling is a bit messy when supporting versions like 2.4. Having a lot of options, from 3to2 to 2to3, then the single codebase through parallel trees, is a really good thing. However, it's hard for us to choose a strategy for projects, so we don't, which is why most documentation tries to lay numerous strategies out there.&lt;br /&gt;
&lt;br /&gt;
It was suggested that documentation could stand to gain more examples of real-world porting examples, ideally pointing to changesets of these projects. The thought of our porting documentation gaining a cookbook-style approach seemed to get some agreement as a good idea.&lt;/div&gt;
&lt;br /&gt;
&lt;div class="section" id="hash-randomization"&gt;
&lt;h4&gt;
Hash Randomization&lt;/h4&gt;
Release candidates are available to all branches receiving security fixes, and in the meantime, David Malcolm found and reported a security issue in the upstream &lt;tt class="docutils literal"&gt;expat&lt;/tt&gt; project. However, since the upstream fix includes many other fixes at the same time, we should pick up only the security fix at this time and leave the bug fixes for the next bug fix release of the relevant branches.&lt;/div&gt;
&lt;br /&gt;
&lt;div class="section" id="new-dict-implementation"&gt;
&lt;h4&gt;
New &lt;tt class="docutils literal"&gt;dict&lt;/tt&gt; Implementation&lt;/h4&gt;
Since the implementation makes sense and the tests pass, it was quickly agreed upon that Mark Shannon's PEP &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0412/"&gt;412&lt;/a&gt; should be accepted. As with other changes agreed upon in this summit, we'd like for the change to be pushed soon in order to get mileage on it throughout the alpha and beta cycles. With this acceptance comes commit access for Mark so that he can maintain the code.&lt;br /&gt;
&lt;br /&gt;
It was also remarked that the only user-visible difference that this implementation brings is a difference in sort ordering, but the recent hash randomization work makes this a moot point.&lt;br /&gt;&lt;/div&gt;
&lt;br /&gt;
&lt;div class="section" id="new-pickle-protocol"&gt;
&lt;h4&gt;
New &lt;tt class="docutils literal"&gt;pickle&lt;/tt&gt; Protocol&lt;/h4&gt;
PEP &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-3154/"&gt;3154&lt;/a&gt;, mentioned by Lukasz Langa, specifies a new pickle protocol -- version 4. Lukasz mentioned exception pickling in &lt;tt class="docutils literal"&gt;multiprocessing&lt;/tt&gt; as being an issue, and Antoine solved it with this PEP. While qualified names provide some help, it was agreed upon that this PEP needs more attention.&lt;br /&gt;
&lt;hr class="docutils" /&gt;
&lt;br /&gt;
If you have any questions or comments, please post to &lt;a class="reference external" href="http://mail.python.org/mailman/listinfo/python-dev"&gt;python-dev&lt;/a&gt;.&lt;br /&gt;
&lt;br /&gt;
&lt;em&gt;Thanks to Eric Snow and Senthil Kumaran for contributing to this post.&lt;/em&gt;&lt;/div&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=ZLaHCD80z5E:ySbBd-izDGM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=ZLaHCD80z5E:ySbBd-izDGM:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=ZLaHCD80z5E:ySbBd-izDGM:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=ZLaHCD80z5E:ySbBd-izDGM:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=ZLaHCD80z5E:ySbBd-izDGM:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=ZLaHCD80z5E:ySbBd-izDGM:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=ZLaHCD80z5E:ySbBd-izDGM:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=ZLaHCD80z5E:ySbBd-izDGM:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/ZLaHCD80z5E" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/8622102854864570782?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/8622102854864570782?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/ZLaHCD80z5E/2012-language-summit-report.html" title="2012 Language Summit Report" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2012/03/2012-language-summit-report.html</feedburner:origLink></entry><entry gd:etag="W/&quot;DkcFQnY6fyp7ImA9WhdXEUQ.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-5936093913265067028</id><published>2011-08-24T09:53:00.001-04:00</published><updated>2011-08-24T09:53:33.817-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-08-24T09:53:33.817-04:00</app:edited><title>Meet the Team: Brett Cannon</title><content type="html">&lt;div class="document" id="meet-the-team-brett-cannon"&gt;
&lt;p&gt;&lt;em&gt;This post is part of the &amp;quot;Meet the Team&amp;quot; series of posts, which is meant to give a brief introduction to the Python core development team.&lt;/em&gt;&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;&lt;col class="field-name"&gt;&lt;/col&gt;&lt;col class="field-body"&gt;&lt;/col&gt;&lt;tbody valign="top"&gt;&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Name:&lt;/th&gt;&lt;td class="field-body"&gt;Brett Cannon&lt;/td&gt;&lt;/tr&gt;&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Location:&lt;/th&gt;&lt;td class="field-body"&gt;San Francisco, CA, USA&lt;/td&gt;&lt;/tr&gt;&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Home Page:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;a class="reference external" href="https://profiles.google.com/bcannon"&gt;https://profiles.google.com/bcannon&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Blog:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;a class="reference external" href="http://sayspy.blogspot.com"&gt;http://sayspy.blogspot.com&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;How long have you been using Python?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since the fall of 2000&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How long have you been a core committer?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since April 2003 (shortly after PyCon 2003).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How did you get started as a core developer? Do you remember your first commit?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I became a core developer thanks to incessantly bugging people to commit patches for me (a trick that doesn't quite work as well as it used to; perk of getting in before Python's popularity spikein 2003/2004). Starting in August 2002 I revitalized the Python-Dev Summaries (which lasted for about 2.5 years). While writing the Summaries I would fairly regularly pick up on little issues that needed fixing. Since I was already talking on python-dev fairly regularly I simply asked folks to check my patches and commit them for me. One day Guido just asked why I didn't commit myself, I said I didn't have commit rights, and then he more or less said &amp;quot;you do now&amp;quot;.&lt;/p&gt;
&lt;p&gt;As for my first commit (changeset 28686), it was fixing some string escapement in time.strptime() (which happens to be my first contribution to Python itself).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Which parts of Python are you working on now?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I typically focus on the import machinery and making the Python language work well across all VMs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What do you do with Python when you aren't doing core development work?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I managed to use Python a little bit in my PhD thesis by implementing some server-side stuff in Python. Otherwise all of my personal projects use Python as much as possible. And my future job at Google is going to be mostly in Python.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What do you do when you aren't programming?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'm somewhat of a movie junkie with selective bits of TV tossed in (losing my television in the summer of 2000 to a heat wave was one of the best things that ever accidentally happened to me; marrying my wife has been the best thing I did on purpose =). Otherwise I read a lot; mostly magazines and websites, but with some book always under progress.&lt;/p&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=TfQ5Aqj0liU:SIyoG2wHDSA:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=TfQ5Aqj0liU:SIyoG2wHDSA:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=TfQ5Aqj0liU:SIyoG2wHDSA:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=TfQ5Aqj0liU:SIyoG2wHDSA:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=TfQ5Aqj0liU:SIyoG2wHDSA:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=TfQ5Aqj0liU:SIyoG2wHDSA:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=TfQ5Aqj0liU:SIyoG2wHDSA:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=TfQ5Aqj0liU:SIyoG2wHDSA:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/TfQ5Aqj0liU" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/5936093913265067028?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/5936093913265067028?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/TfQ5Aqj0liU/meet-team-brett-cannon.html" title="Meet the Team: Brett Cannon" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2011/08/meet-team-brett-cannon.html</feedburner:origLink></entry><entry gd:etag="W/&quot;A0ENRnk4cSp7ImA9WhdRGE0.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-3113232503124211321</id><published>2011-08-08T09:09:00.000-04:00</published><updated>2011-08-08T09:21:37.739-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-08-08T09:21:37.739-04:00</app:edited><title>Meet the Team: Michael Foord</title><content type="html">&lt;div class="document" id="meet-the-team-michael-foord"&gt;
&lt;p&gt;&lt;em&gt;This post is part of the &amp;quot;Meet the Team&amp;quot; series of posts, which is meant to give a brief introduction to the Python core development team.&lt;/em&gt;&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;&lt;col class="field-name"&gt;&lt;/col&gt;&lt;col class="field-body"&gt;&lt;/col&gt;&lt;tbody valign="top"&gt;&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Name:&lt;/th&gt;&lt;td class="field-body"&gt;Michael Foord&lt;/td&gt;&lt;/tr&gt;&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Location:&lt;/th&gt;&lt;td class="field-body"&gt;Northampton UK&lt;/td&gt;&lt;/tr&gt;&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Home Page:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;a class="reference external" href="http://www.voidspace.org.uk/"&gt;http://www.voidspace.org.uk/&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;How long have you been using Python?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I first started using Python as a hobby in 2002. I started using Python full time for work in 2006. When I started programming with Python it was with a group of guys who wanted to write a program to aggregate information from a Play By Email game. None of us had done any programming for a while and we had just decided on using Smalltalk when someone suggested we try Python. I quickly fell in love with Python.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How long have you been a core committer?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I became a core-committer at PyCon in 2009. It was originally because of my involvement with IronPython.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How did you get started as a core developer? Do you remember your first commit?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;During the PyCon 2009 sprints I worked with Gregory Smith, another core developer, to incorporate some improvements to unittest contributed by Google.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Which parts of Python are you working on now?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After the initial work on unittest at the PyCon sprint I took on fixing other issues and making improvements to unittest, which was without a maintainer. I became the maintainer of unittest but also contribute to other parts of the standard library.&lt;/p&gt;
&lt;p&gt;I'm involved in supporting Python in various other minor ways, such as looking after Planet Python, being a PSF member, helping out on the python.org webmaster alias and so on.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What do you do with Python when you aren't doing core development work?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For my day job I do web development for Canonical. I work on some of the web services infrastructure around the Canonical websites and also some of the services that integrate with Ubuntu itself. That's good fun and its a great team.&lt;/p&gt;
&lt;p&gt;In my spare time I work on projects like &lt;a class="reference external" href="http://pypi.python.org/pypi/unittest2"&gt;unittest2&lt;/a&gt; (a backport of the improvements of unittest for other platforms), &lt;a class="reference external" href="http://pypi.python.org/pypi/mock"&gt;mock&lt;/a&gt; (a testing library that provides mock objects and support for monkey patching in tests) and a whole bunch of other smaller stuff.&lt;/p&gt;
&lt;p&gt;I'd like to write more, but having devoted the best part of two years to writing IronPython in Action I doubt I'll take on any large writing projects soon.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What do you do when you aren't programming?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'm very involved in a church in Northampton (UK), which takes a lot of my time and I help with administration for a charity we run. This is one reason why working for Canonical is good - I can work from home and having put my roots down here I won't move anywhere else (I certainly don't stay for the weather). Needless to say there isn't much Python programming happening in Northampton. My first full time programming gig was with an amazing team in London, which was a two hour door to door commute each way. I managed four years of that, and really enjoyed the job, but having escaped the commute I'm not likely to ever go back.&lt;/p&gt;
&lt;p&gt;I also enjoy gaming on the XBox. Unfortunately if I find a game I like I can get sucked into it for weeks so I have to be careful. I've avoided world of warcraft and eve online for this reason... I also organise a monthly geek meet in Northampton. There aren't enough Python programmers for a Python user group but we have a good collection of geeks of all sorts. We normally just get together in a pub and chew the fat or show off our latest gadgets.&lt;/p&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=szWrurZ-wqo:4pbNUjG7kzo:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=szWrurZ-wqo:4pbNUjG7kzo:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=szWrurZ-wqo:4pbNUjG7kzo:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=szWrurZ-wqo:4pbNUjG7kzo:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=szWrurZ-wqo:4pbNUjG7kzo:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=szWrurZ-wqo:4pbNUjG7kzo:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=szWrurZ-wqo:4pbNUjG7kzo:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=szWrurZ-wqo:4pbNUjG7kzo:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/szWrurZ-wqo" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/3113232503124211321?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/3113232503124211321?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/szWrurZ-wqo/meet-team-michael-foord.html" title="Meet the Team: Michael Foord" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2011/08/meet-team-michael-foord.html</feedburner:origLink></entry><entry gd:etag="W/&quot;DkUCRns-eSp7ImA9WhdTFE0.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-2816149487301404938</id><published>2011-07-11T13:11:00.000-04:00</published><updated>2011-07-11T13:11:07.551-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-07-11T13:11:07.551-04:00</app:edited><title>A Python Launcher For Windows</title><content type="html">&lt;div class="document" id="a-python-launcher-for-windows"&gt; &lt;p&gt;Mark Hammond (author of &lt;a class="reference external" href="http://sourceforge.net/projects/pywin32/"&gt;pywin32&lt;/a&gt; and long-time supporter of Python on Windows) has written &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0397/"&gt;PEP 397&lt;/a&gt;, which describes a new launcher for Python on Windows. Vinay Sanjip (author of the standard library &lt;a class="reference external" href="http://docs.python.org/py3k/library/logging.html"&gt;logging&lt;/a&gt; module) has recently created an implementation of the launcher, downloadable from &lt;a class="reference external" href="https://bitbucket.org/vinay.sajip/pylauncher/downloads"&gt;https://bitbucket.org/vinay.sajip/pylauncher/downloads&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The launcher allows Python scripts (&lt;tt class="docutils literal"&gt;.py&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;.pyw&lt;/tt&gt; files) on Windows to specify the version of Python which should be used, allowing simultaneous use of Python 2 and 3.&lt;/p&gt;&lt;p&gt;Windows users should consider downloading the launcher and testing it, to help the Python developers iron out any remaining issues. The launcher is packaged as a standalone application, and will support currently available versions of Python. The intention is that once the launcher is finalised, it will be included as part of Python 3.3 (although it will remain available as a standalone download for users of earlier versions).&lt;/p&gt;&lt;p&gt;Two versions of the launcher are available - &lt;tt class="docutils literal"&gt;launcher.msi&lt;/tt&gt; which installs in the &lt;tt class="docutils literal"&gt;Program Files&lt;/tt&gt; directory, and &lt;tt class="docutils literal"&gt;launchsys.msi&lt;/tt&gt; which installs in Windows' &lt;tt class="docutils literal"&gt;System32&lt;/tt&gt; directory. (There are also 64-bit versions for 64-bit versions of Windows).&lt;/p&gt;&lt;div class="section" id="some-details-about-the-launcher"&gt;&lt;h4&gt;Some Details About the Launcher&lt;/h4&gt;&lt;p&gt;The full specification of the behaviour of the launcher is given in &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0397/"&gt;PEP 397&lt;/a&gt;. To summarise the basic principles:&lt;/p&gt;&lt;ul class="simple"&gt;&lt;li&gt;The launcher supplies two executables - &lt;tt class="docutils literal"&gt;py.exe&lt;/tt&gt; (the console version) and &lt;tt class="docutils literal"&gt;pyw.exe&lt;/tt&gt; (the GUI version).&lt;/li&gt;
&lt;li&gt;The launcher is registered as the handler for &lt;tt class="docutils literal"&gt;.py&lt;/tt&gt; (console) and &lt;tt class="docutils literal"&gt;.pyw&lt;/tt&gt; (GUI) file extensions.&lt;/li&gt;
&lt;li&gt;When executing a script, the launcher looks for a Unix-style &lt;tt class="docutils literal"&gt;#!&lt;/tt&gt; (shebang) line in the script. It recognises executable names &lt;tt class="docutils literal"&gt;python&lt;/tt&gt; (system default python), &lt;tt class="docutils literal"&gt;python2&lt;/tt&gt; (default Python 2 release) and &lt;tt class="docutils literal"&gt;python3&lt;/tt&gt; (default Python 3 release). The precise details can easily be customised on a per-user or per-machine basis.&lt;/li&gt;
&lt;li&gt;When used standalone, the &lt;tt class="docutils literal"&gt;py.exe&lt;/tt&gt; command launches the Python interactive interpreter. Command line switches are supported, so that &lt;tt class="docutils literal"&gt;py &lt;span class="pre"&gt;-2&lt;/span&gt;&lt;/tt&gt; launches Python 2, &lt;tt class="docutils literal"&gt;py &lt;span class="pre"&gt;-3&lt;/span&gt;&lt;/tt&gt; launches Python 3, and &lt;tt class="docutils literal"&gt;py&lt;/tt&gt; launches the default version.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;div class="section" id="simple-usage-instructions"&gt;&lt;h4&gt;Simple Usage Instructions&lt;/h4&gt;&lt;p&gt;When it is installed, the launcher associates itself with &lt;tt class="docutils literal"&gt;.py&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;.pyw&lt;/tt&gt; scripts. Unless you do anything else, scripts will be run using the default Python on the machine, so you will see no change. One thing you might like to do, if you use the console a lot, is to add &lt;tt class="docutils literal"&gt;.py&lt;/tt&gt; to your &lt;tt class="docutils literal"&gt;PATHEXT&lt;/tt&gt; variable so that scripts don't get executed in a separate console.&lt;/p&gt;&lt;p&gt;To specify that a script must use Python 2, simply add:&lt;/p&gt;&lt;pre class="literal-block"&gt;#!/usr/bin/env python2
&lt;/pre&gt;&lt;p&gt;as the first line of the script. (This is a Unix-compatible form. If you don't need Unix compatibility, &lt;tt class="docutils literal"&gt;#!python2&lt;/tt&gt; will do).&lt;/p&gt;&lt;p&gt;If on the other hand, you want to specify that a script must use Python 3, add:&lt;/p&gt;&lt;pre class="literal-block"&gt;#!/usr/bin/env python3
&lt;/pre&gt;&lt;p&gt;as the first line.&lt;/p&gt;&lt;p&gt;You can also start the Python interpreter using any of the following commands:&lt;/p&gt;&lt;pre class="literal-block"&gt;# Default version of Python
py
# Python 2
py -2
# Python 3
py -3
&lt;/pre&gt;&lt;p&gt;For this to work, the &lt;tt class="docutils literal"&gt;py.exe&lt;/tt&gt; executable must be on your path. This is automatic with the &lt;tt class="docutils literal"&gt;launchsys&lt;/tt&gt; version of the installer, but the install directory (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C:\Program&lt;/span&gt; Files\Python Launcher&lt;/tt&gt;) must be added manually to &lt;tt class="docutils literal"&gt;PATH&lt;/tt&gt; with &lt;tt class="docutils literal"&gt;launcher.msi&lt;/tt&gt;.&lt;/p&gt;&lt;/div&gt;&lt;div class="section" id="further-reading"&gt;&lt;h4&gt;Further Reading&lt;/h4&gt;&lt;p&gt;The following email threads on python-dev cover some of the key discussions:&lt;/p&gt;&lt;ul class="simple"&gt;&lt;li&gt;Mark's initial announcement of the draft PEP: &lt;a class="reference external" href="http://mail.python.org/pipermail/python-dev/2011-March/109509.html"&gt;http://mail.python.org/pipermail/python-dev/2011-March/109509.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The second draft of the PEP: &lt;a class="reference external" href="http://mail.python.org/pipermail/python-dev/2011-March/109786.html"&gt;http://mail.python.org/pipermail/python-dev/2011-March/109786.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Vinay's initial query about a C implementation of the launcher: &lt;a class="reference external" href="http://mail.python.org/pipermail/python-dev/2011-June/112145.html"&gt;http://mail.python.org/pipermail/python-dev/2011-June/112145.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Vinay's announcement of his C implementation: &lt;a class="reference external" href="http://mail.python.org/pipermail/python-dev/2011-July/112184.html"&gt;http://mail.python.org/pipermail/python-dev/2011-July/112184.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Vinay's call for testers: &lt;a class="reference external" href="http://mail.python.org/pipermail/python-dev/2011-July/112251.html"&gt;http://mail.python.org/pipermail/python-dev/2011-July/112251.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=1JqABSwTN5U:LfTvU-8RBmk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=1JqABSwTN5U:LfTvU-8RBmk:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=1JqABSwTN5U:LfTvU-8RBmk:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=1JqABSwTN5U:LfTvU-8RBmk:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=1JqABSwTN5U:LfTvU-8RBmk:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=1JqABSwTN5U:LfTvU-8RBmk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=1JqABSwTN5U:LfTvU-8RBmk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=1JqABSwTN5U:LfTvU-8RBmk:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/1JqABSwTN5U" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/2816149487301404938?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/2816149487301404938?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/1JqABSwTN5U/python-launcher-for-windows_11.html" title="A Python Launcher For Windows" /><author><name>Paul Moore</name><uri>http://www.blogger.com/profile/17557923197983461835</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2011/07/python-launcher-for-windows_11.html</feedburner:origLink></entry><entry gd:etag="W/&quot;DkcNQH48fCp7ImA9WhdTE0Q.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-8754201719287553183</id><published>2011-07-11T10:20:00.000-04:00</published><updated>2011-07-11T10:21:31.074-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-07-11T10:21:31.074-04:00</app:edited><title>CPython 3.2.1 Released</title><content type="html">&lt;div class="document" id="cpython-3-2-1-released"&gt;
&lt;p&gt;On behalf of the python-dev team, release manager &lt;a class="reference external" href="http://pythonic.pocoo.org/"&gt;Georg Brandl&lt;/a&gt; has announced the final release of &lt;a class="reference external" href="http://www.python.org/download/releases/3.2.1/"&gt;CPython 3.2.1&lt;/a&gt;. Windows installers and tarballs are available as of July 10, so please consider upgrading to this release.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://docs.python.org/3.2/whatsnew/3.2.html"&gt;What's New&lt;/a&gt; document lists all of the new features in 3.2, and the &lt;a class="reference external" href="http://hg.python.org/cpython/file/v3.2.1/Misc/NEWS"&gt;Misc/NEWS&lt;/a&gt; file in the source lists each bug fixed.&lt;/p&gt;
&lt;p&gt;If you find any issues with this release or any other, please report them to &lt;a class="reference external" href="http://bugs.python.org/"&gt;http://bugs.python.org/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=tsieHw51jhc:G_3vQohz6Mo:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=tsieHw51jhc:G_3vQohz6Mo:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=tsieHw51jhc:G_3vQohz6Mo:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=tsieHw51jhc:G_3vQohz6Mo:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=tsieHw51jhc:G_3vQohz6Mo:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=tsieHw51jhc:G_3vQohz6Mo:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=tsieHw51jhc:G_3vQohz6Mo:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=tsieHw51jhc:G_3vQohz6Mo:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/tsieHw51jhc" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/8754201719287553183?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/8754201719287553183?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/tsieHw51jhc/cpython-321-released.html" title="CPython 3.2.1 Released" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2011/07/cpython-321-released.html</feedburner:origLink></entry><entry gd:etag="W/&quot;DEIHQHk_fCp7ImA9WhZaGUs.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-534688699588920983</id><published>2011-07-06T11:31:00.000-04:00</published><updated>2011-07-06T11:35:31.744-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-07-06T11:35:31.744-04:00</app:edited><title>3.2.1 Release Candidate 2 Released</title><content type="html">&lt;div class="document" id="release-candidate-2-released"&gt;
&lt;p&gt;Following up a big month of &lt;a class="reference external" href="http://blog.python.org/2011/06/june-releases-267-272-314.html"&gt;releases in June&lt;/a&gt;, the second release candidate of the 3.2.1 line &lt;a class="reference external" href="http://www.python.org/download/releases/3.2.1/"&gt;is now ready&lt;/a&gt;. Since the first release candidate on May 15, over 40 issues have been fixed. We encourage everyone to test their projects with this candidate to get one last look before the final release of 3.2.1.&lt;/p&gt;
&lt;div class="section" id="what-s-fixed"&gt;&lt;h4&gt;What's fixed?&lt;/h4&gt;
&lt;div class="section" id="i-o"&gt;&lt;h5&gt;I/O&lt;/h5&gt;
&lt;p&gt;&lt;a class="reference external" href="http://bugs.python.org/issue1195"&gt;#1195&lt;/a&gt; spent a few years witout a fix, but a simple addition to clear errors before calling &lt;tt class="docutils literal"&gt;fgets&lt;/tt&gt; solves the problem of interrupting &lt;tt class="docutils literal"&gt;sys.stdin.read()&lt;/tt&gt; with CTRL-D inside of &lt;tt class="docutils literal"&gt;input()&lt;/tt&gt;. The &lt;tt class="docutils literal"&gt;io&lt;/tt&gt; system saw a cleanup in &lt;a class="reference external" href="http://bugs.python.org/issue12175"&gt;#12175&lt;/a&gt; with the &lt;tt class="docutils literal"&gt;readall&lt;/tt&gt; method with &lt;tt class="docutils literal"&gt;None&lt;/tt&gt; being the return value on a &lt;tt class="docutils literal"&gt;read()&lt;/tt&gt; which returns &lt;tt class="docutils literal"&gt;None&lt;/tt&gt;, and a &lt;tt class="docutils literal"&gt;ValueError&lt;/tt&gt; is now raised when a file can't be opened.&lt;/p&gt;
&lt;p&gt;Although this isn't new for RC2, &lt;a class="reference external" href="http://bugs.python.org/issue11272"&gt;#11272&lt;/a&gt; is an important 3.2.1 fix to &lt;tt class="docutils literal"&gt;input()&lt;/tt&gt; on Windows - the fixing of a trailing &lt;tt class="docutils literal"&gt;\r&lt;/tt&gt;. The issue has been reported many times over and affects a many people (distutils upload command anyone?), so hopefully 3.2.1 does the trick for you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="windows"&gt;&lt;h5&gt;Windows&lt;/h5&gt;
&lt;p&gt;3.2.0 brought a new feature for Windows: &lt;tt class="docutils literal"&gt;os.symlink&lt;/tt&gt; support. With that feature came &lt;a class="reference external" href="http://bugs.python.org/issue12084"&gt;#12084&lt;/a&gt;, &lt;tt class="docutils literal"&gt;os.stat&lt;/tt&gt; was improperly evaluating Windows symlinks, so the inner workings of the various &lt;tt class="docutils literal"&gt;stat&lt;/tt&gt; functions were corrected.&lt;/p&gt;
&lt;p&gt;A user noticed that &lt;tt class="docutils literal"&gt;os.path.isdir&lt;/tt&gt; was slow, and the fact that it relied on &lt;tt class="docutils literal"&gt;os.stat&lt;/tt&gt; contributed to that, especially when evaluating symlinks (which are generally twice as slow as regular files). While &lt;tt class="docutils literal"&gt;os.path.isdir&lt;/tt&gt; isn't anyone's performance bottleneck, it's called numerous times on interpreter startup so changing it in &lt;a class="reference external" href="http://bugs.python.org/issue11583"&gt;#11583&lt;/a&gt; to use &lt;tt class="docutils literal"&gt;GetFileAttributes&lt;/tt&gt; gives a tiny speedup to build on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="subprocess"&gt;&lt;h5&gt;subprocess&lt;/h5&gt;
&lt;p&gt;Creating a &lt;tt class="docutils literal"&gt;Popen&lt;/tt&gt; object with unexpected arguments was causing an &lt;tt class="docutils literal"&gt;AttributeError&lt;/tt&gt;, but that was reported in &lt;a class="reference external" href="http://bugs.python.org/issue12085"&gt;#12085&lt;/a&gt; and was fixed by the reporter. Due to a change in 3.2.0, &lt;tt class="docutils literal"&gt;Popen&lt;/tt&gt; wasn't correctly handling empty environment variables, specifically the &lt;tt class="docutils literal"&gt;env&lt;/tt&gt; argument. &lt;a class="reference external" href="http://bugs.python.org/issue12383"&gt;#12383&lt;/a&gt; was created for the issue and was promptly fixed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="and-more"&gt;&lt;h5&gt;...and more!&lt;/h5&gt;
&lt;p&gt;For a full list of changes through 3.2.1 RC2, check out &lt;a class="reference external" href="http://hg.python.org/releasing/3.2.1/file/v3.2.1rc2/Misc/NEWS"&gt;the change log&lt;/a&gt; and &lt;a class="reference external" href="http://www.python.org/download/releases/3.2.1/"&gt;download it now&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;As always, please report any issues you find to &lt;a class="reference external" href="http://bugs.python.org"&gt;http://bugs.python.org&lt;/a&gt;. We appreciate your help in making great Python releases.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qJVUVTi0FtY:PUk3o78ZLFA:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qJVUVTi0FtY:PUk3o78ZLFA:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=qJVUVTi0FtY:PUk3o78ZLFA:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qJVUVTi0FtY:PUk3o78ZLFA:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=qJVUVTi0FtY:PUk3o78ZLFA:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qJVUVTi0FtY:PUk3o78ZLFA:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=qJVUVTi0FtY:PUk3o78ZLFA:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qJVUVTi0FtY:PUk3o78ZLFA:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/qJVUVTi0FtY" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/534688699588920983?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/534688699588920983?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/qJVUVTi0FtY/321-release-candidate-2-released.html" title="3.2.1 Release Candidate 2 Released" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2011/07/321-release-candidate-2-released.html</feedburner:origLink></entry><entry gd:etag="W/&quot;DE4NRXo6eCp7ImA9WhZbEEg.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-3330803816126009002</id><published>2011-06-14T09:08:00.001-04:00</published><updated>2011-06-14T09:09:54.410-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-06-14T09:09:54.410-04:00</app:edited><title>June Releases - 2.6.7, 2.7.2, 3.1.4</title><content type="html">&lt;div class="document" id="june-2011-releases"&gt;
&lt;p&gt;June is a big month for Python releases, with an update coming out of all active branches.&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h4&gt;2.6.7&lt;/h4&gt;
&lt;p&gt;A new source-only release of Python &lt;a class="reference external" href="http://www.python.org/download/releases/2.6.7/"&gt;2.6.7&lt;/a&gt; is available, providing fixes to three security issues. Now that the 2.6 line is in security-mode, these releases will happen on an as-needed basis until October 2013 in source-only form. If you require binary installers, you should consider an upgrade to 2.7 or 3.2.&lt;/p&gt;
&lt;p&gt;2.6.7 is the first release to contain a fix to the previously covered &lt;a class="reference external" href="http://blog.python.org/2011/04/urllib-security-vulnerability-fixed.html"&gt;urllib vulnerability&lt;/a&gt;. Additionally, an &lt;tt class="docutils literal"&gt;smtpd&lt;/tt&gt; DoS vulnerability (Issue &lt;a class="reference external" href="http://bugs.python.org/issue9129"&gt;#9129&lt;/a&gt;) and &lt;tt class="docutils literal"&gt;SimpleHTTPServer.list_directory&lt;/tt&gt; XSS vulnerability (Issue &lt;a class="reference external" href="http://bugs.python.org/issue11442"&gt;#11442&lt;/a&gt;) are fixed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h4&gt;2.7.2&lt;/h4&gt;
&lt;p&gt;The last minor version of the 2.x line, 2.7, received over 150 bug fixes since 2.7.1 in November 2010. &lt;a class="reference external" href="http://www.python.org/download/releases/2.7.2/"&gt;2.7.2&lt;/a&gt; source and binary installers are available as of June 12, which include the security fixes mentioned in 2.6.7.&lt;/p&gt;
&lt;p&gt;A number of crashes are fixed: a situation when Python incorrectly used non-Python managed memory while it was being modified by another thread, when deleting &lt;tt class="docutils literal"&gt;__abstractmethods__&lt;/tt&gt; from a class, accessing a memory-mapped file past its length, and several others.&lt;/p&gt;
&lt;p&gt;A fix to &lt;tt class="docutils literal"&gt;getpass&lt;/tt&gt; corrects a regression in regards to CTRL-C and CTRL-Z handling. &lt;tt class="docutils literal"&gt;multiprocessing&lt;/tt&gt; received a number of fixes, including treating Windows services like frozen executables and a correction to a race condition when terminating &lt;tt class="docutils literal"&gt;multiprocessing.Pool&lt;/tt&gt; workers. &lt;tt class="docutils literal"&gt;mmap&lt;/tt&gt; was fixed to work with file sizes and offsets larger than 4 GB even on 32-bit builds, and a &lt;tt class="docutils literal"&gt;TypeError&lt;/tt&gt; is now raised rather than segfaulting when trying to write to a non-writeable map.&lt;/p&gt;
&lt;p&gt;For a full list of changes, see &lt;a class="reference external" href="http://hg.python.org/cpython/raw-file/eb3c9b74884c/Misc/NEWS"&gt;the 2.7.2 news file&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h4&gt;3.1.4&lt;/h4&gt;
&lt;p&gt;3.1.4 is the last bug-fix release of the 3.1.x line, sending 3.1 into security-mode as the 3.2 line carries on. 3.1.4 contains over 100 bug fixes since the 3.1.3 release in November 2010. As with 2.7.2, binary installers are available as of June 12, and 3.1.4 is the first 3.x release to contain the security fixes listed in 2.6.7.&lt;/p&gt;
&lt;p&gt;3.1.4 corrects some problems with &lt;tt class="docutils literal"&gt;__dir__&lt;/tt&gt; lookups on objects, dates past 2038 in the Windows implementation of &lt;tt class="docutils literal"&gt;os.stat&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;os.utime&lt;/tt&gt;, and a number of 64-bit cleanups. The &lt;tt class="docutils literal"&gt;io&lt;/tt&gt; library saw a number of changes in returning &lt;tt class="docutils literal"&gt;None&lt;/tt&gt; when nothing was read and raising appropriate exceptions in other spots. &lt;tt class="docutils literal"&gt;ctypes&lt;/tt&gt; callback arguments were fixed on 64-bit Windows and a crash was also remedied.&lt;/p&gt;
&lt;p&gt;For a full list of changes, see &lt;a class="reference external" href="http://hg.python.org/cpython/raw-file/feae9f9e9f30/Misc/NEWS"&gt;the 3.1.4 news file&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h4&gt;3.2.1&lt;/h4&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.python.org/download/releases/3.2.1/"&gt;3.2.1&lt;/a&gt; is currently in the release candidate phase, with one round already completed and a second release candidate expected soon. We would greatly appreciate 3.2 users trying out the release candidates to ensure we cover any issues you may be seeing. If you have any bugs to report, please file them on &lt;a class="reference external" href="http://bugs.python.org"&gt;bugs.python.org&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=Y0OHiMAU4rA:8amqCEIJod4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=Y0OHiMAU4rA:8amqCEIJod4:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=Y0OHiMAU4rA:8amqCEIJod4:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=Y0OHiMAU4rA:8amqCEIJod4:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=Y0OHiMAU4rA:8amqCEIJod4:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=Y0OHiMAU4rA:8amqCEIJod4:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=Y0OHiMAU4rA:8amqCEIJod4:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=Y0OHiMAU4rA:8amqCEIJod4:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/Y0OHiMAU4rA" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/3330803816126009002?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/3330803816126009002?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/Y0OHiMAU4rA/june-releases-267-272-314.html" title="June Releases - 2.6.7, 2.7.2, 3.1.4" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2011/06/june-releases-267-272-314.html</feedburner:origLink></entry><entry gd:etag="W/&quot;CkABR3wycCp7ImA9WhZVFEg.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-1571652574247676686</id><published>2011-05-26T18:44:00.009-04:00</published><updated>2011-05-26T18:59:16.298-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-05-26T18:59:16.298-04:00</app:edited><title>New faulthandler module in Python 3.3 helps debugging</title><content type="html">&lt;div class="document" id="new-faulthandler-module-in-python-3-3-helps-debugging"&gt;&lt;p&gt;When a user reports that your program crashes or hangs, sometimes you can only help to try and collect more information and outline a scenario to reproduce the situation. Even with a reliable user scenario, as a developer you are often unable to reproduce the situation due to environment differences, e.g., operating system and compiler. If you are lucky, the user will be able to install debug tools, but most of time you will have to wait until another person is able to obtain more information from the same situation.&lt;/p&gt;&lt;div class="section" id="fatal-errors"&gt;&lt;h4&gt;Fatal Errors&lt;/h4&gt;&lt;p&gt;A new module introduced in Python 3.3 should help this problem: &lt;a class="reference external" href="http://docs.python.org/dev/library/faulthandler.html"&gt;faulthandler&lt;/a&gt;. &lt;tt class="docutils literal"&gt;faulthandler&lt;/tt&gt; provides the ability to dump the Python traceback on a fatal error such as a segmentation fault, division by zero, abort, or bus error. You can enable it inside your application using &lt;tt class="docutils literal"&gt;faulthandler.enable()&lt;/tt&gt;, by providing the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-X&lt;/span&gt; faulthandler&lt;/tt&gt; option to the Python executable, or with the &lt;a class="reference external" href="http://docs.python.org/dev/using/cmdline.html#envvar-PYTHONFAULTHANDLER"&gt;PYTHONFAULTHANDLER=1&lt;/a&gt; environment variable. Output example:&lt;/p&gt;&lt;pre class="literal-block"&gt;Fatal Python error: Segmentation fault

Current thread 0x00007f7babc6b700:
  File "Lib/test/crashers/gc_inspection.py", line 29 in g
  File "Lib/test/crashers/gc_inspection.py", line 32 in &amp;lt;module&amp;gt;
Segmentation fault&lt;/pre&gt;&lt;/div&gt;&lt;div class="section" id="timeout"&gt;&lt;h4&gt;Timeout&lt;/h4&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;faulthandler&lt;/tt&gt; can also dump the traceback after a timeout using &lt;tt class="docutils literal"&gt;faulthandler.dump_tracebacks_later(timeout)&lt;/tt&gt;. Call it again to restart the timer or call &lt;tt class="docutils literal"&gt;faulthandler.cancel_dump_tracebacks_later()&lt;/tt&gt; to stop the timer. Output example:&lt;/p&gt;&lt;pre class="literal-block"&gt;Timeout (0:01:00)!
Current thread 0x00007f987d459700:
  File "Lib/test/crashers/infinite_loop_re.py", line 20 in &amp;lt;module&amp;gt;
&lt;/pre&gt;&lt;p&gt;Use the &lt;tt class="docutils literal"&gt;repeat=True&lt;/tt&gt; option to dump the traceback each &lt;tt class="docutils literal"&gt;timeout&lt;/tt&gt; seconds, or &lt;tt class="docutils literal"&gt;exit=True&lt;/tt&gt; to immediatly exit the program in an unsafe fashion, e.g. don't flush files.&lt;/p&gt;&lt;/div&gt;&lt;div class="section" id="user-signal"&gt;&lt;h4&gt;User Signal&lt;/h4&gt;&lt;p&gt;If you have access to the host on which the program is running, you can use &lt;tt class="docutils literal"&gt;faulthandler.register(signal)&lt;/tt&gt; to install a signal handler to dump the traceback when &lt;tt class="docutils literal"&gt;signal&lt;/tt&gt; is received. On UNIX, for example, you can use the &lt;tt class="docutils literal"&gt;SIGUSR1 &lt;/tt&gt;signal: &lt;tt class="docutils literal"&gt;kill &lt;span class="pre"&gt;-USR1&lt;/span&gt; &amp;lt;pid&amp;gt;&lt;/tt&gt; will dump the current traceback. This feature is not available on Windows. Output example:&lt;/p&gt;&lt;pre class="literal-block"&gt;Current thread 0x00007fdc3da74700:
  File "Lib/test/crashers/infinite_loop_re.py", line 19 in &amp;lt;module&amp;gt;
&lt;/pre&gt;&lt;p&gt;Another possibility is to explicitly call &lt;tt class="docutils literal"&gt;faulthandler.dump_traceback()&lt;/tt&gt; in your program.&lt;/p&gt;&lt;/div&gt;&lt;div class="section" id="security-issues-and-the-output-file"&gt;&lt;h4&gt;Security Issues and the Output File&lt;/h4&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;faulthandler&lt;/tt&gt; is disabled by default for security reasons, mainly because it stores the file descriptor of &lt;tt class="docutils literal"&gt;sys.stderr&lt;/tt&gt; and writes the tracebacks into this file descriptor. If &lt;tt class="docutils literal"&gt;sys.stderr&lt;/tt&gt; is closed and the file descriptor is reused, the file descriptor may be a socket, a pipe, a critical file or something else. By default, &lt;tt class="docutils literal"&gt;faulthandler&lt;/tt&gt; writes the tracebacks to &lt;tt class="docutils literal"&gt;sys.stderr&lt;/tt&gt;, but you can specify another file. For more information, see the &lt;a class="reference external" href="http://docs.python.org/dev/library/faulthandler.html#file-descriptor-issue"&gt;faulthandler documentation&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;&lt;div class="section" id="third-party-module-for-older-python-versions"&gt;&lt;h4&gt;Third-party Module for Older Python Versions&lt;/h4&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;faulthandler&lt;/tt&gt; is also maintained as a third-party module for Python 2.5 through 3.2 &lt;cite style="font-style: normal;"&gt;&lt;a href="http://pypi.python.org/pypi/faulthandler/"&gt;on PyPI&lt;/a&gt;&lt;/cite&gt;. The major difference between the Python 3.3 module and the third-party module is the implementation of &lt;tt class="docutils literal"&gt;dump_tracebacks_later()&lt;/tt&gt;: Python 3.3 uses a thread with a timeout on a lock, whereas the third party uses &lt;tt class="docutils literal"&gt;SIGALRM&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;alarm()&lt;/tt&gt;.&lt;/p&gt;&lt;p&gt;The lock timeout, which is a new feature of Python 3.3, has a microsecond resolution. The &lt;tt class="docutils literal"&gt;alarm()&lt;/tt&gt; timer used on older versions has a resolution of one second, and the &lt;tt class="docutils literal"&gt;SIGALRM&lt;/tt&gt; signal may interrupt the current system call which will fail with an &lt;tt class="docutils literal"&gt;EINTR&lt;/tt&gt; error.&lt;/p&gt;&lt;/div&gt;&lt;div class="section" id="early-success"&gt;&lt;h4&gt;Early Success&lt;/h4&gt;&lt;p&gt;The new &lt;tt class="docutils literal"&gt;faulthandler&lt;/tt&gt; module has already helped with tracking down race conditions in &lt;a href="http://www.python.org/dev/buildbot/"&gt;our buildbots&lt;/a&gt;. We hope that it will also help you in your programs.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qqYRL00AmXY:vzhC57CLoWc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qqYRL00AmXY:vzhC57CLoWc:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=qqYRL00AmXY:vzhC57CLoWc:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qqYRL00AmXY:vzhC57CLoWc:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=qqYRL00AmXY:vzhC57CLoWc:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qqYRL00AmXY:vzhC57CLoWc:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=qqYRL00AmXY:vzhC57CLoWc:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qqYRL00AmXY:vzhC57CLoWc:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/qqYRL00AmXY" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/1571652574247676686?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/1571652574247676686?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/qqYRL00AmXY/new-faulthandler-module-in-python-33.html" title="New faulthandler module in Python 3.3 helps debugging" /><author><name>haypo</name><uri>http://www.blogger.com/profile/14658404449913582628</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2011/05/new-faulthandler-module-in-python-33.html</feedburner:origLink></entry><entry gd:etag="W/&quot;A0UFQHgzfSp7ImA9WhZVEUg.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-8013073367967738969</id><published>2011-05-23T10:00:00.005-04:00</published><updated>2011-05-23T10:00:11.685-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-05-23T10:00:11.685-04:00</app:edited><title>The Python Core Mentorship Program</title><content type="html">&lt;div class="document" id="the-python-core-mentorship-program"&gt;

&lt;p&gt;&lt;a class="reference external" href="http://jessenoller.com/"&gt;Jesse Noller&lt;/a&gt; recently &lt;a class="reference external" href="http://jessenoller.com/2011/04/05/python-core-mentorship-up-and-running/"&gt; announced&lt;/a&gt; the formation of the &lt;em&gt;Python Core Mentorship&lt;/em&gt; program. The idea behind the program is to help programmers, including students and developers from other projects, connect with experienced contributors who serve as mentors to ease them into Python Core development.&lt;/p&gt;
&lt;div class="section" id="contributors-wanted"&gt;
&lt;h4&gt;Contributors Wanted&lt;/h4&gt;
&lt;p&gt;The mentors will help people regardless of experience level by
bringing them up to speed, answering questions, and giving guidance as
needed in a non-confrontational and welcoming way. The contributors
will receive guidance through the entire contribution process,
including discussions on the related mailing lists, the bug tracker,
Mercurial, code reviews, and much more.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="early-success"&gt;
&lt;h4&gt;Early Success&lt;/h4&gt;
&lt;p&gt;The program already has been successful, and the participants have
actively committed a number of patches. There have also been several
constructive discussions on the mailing list, helping guide people in
the right direction for a variety of issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="code-of-conduct"&gt;
&lt;h4&gt;Code of Conduct&lt;/h4&gt;
&lt;p&gt;The program has a code of conduct explained on the &lt;a class="reference external" href="http://pythonmentors.com/"&gt;website&lt;/a&gt; that aims to assuage concerns many new contributors have when interacting with experienced developers and mailing lists on contribution in general. Jesse and the other mentors hope that this program can act as a model for other projects long-term, not just benefiting Python-Core. They also want the program to help increase the overall diversity of the contributors to Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="signing-up"&gt;
&lt;h4&gt;Signing Up&lt;/h4&gt;
&lt;p&gt;The program is run via the &lt;a class="reference external" href="http://mail.python.org/mailman/listinfo/core-mentorship"&gt;mailing list&lt;/a&gt; and has a clear, concise &lt;a class="reference external" href="http://pythonmentors.com/"&gt;website&lt;/a&gt; devoted to it. If you would like to join to ask questions and begin on the path of core contribution, or even if you are an experienced developer (even experienced in Python-Core) looking to ask questions you're worried about asking on other lists, this is an excellent opportunity to jump in, ask and get your feet wet!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=SgkfTGCVy1c:olf4Uqq8tXk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=SgkfTGCVy1c:olf4Uqq8tXk:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=SgkfTGCVy1c:olf4Uqq8tXk:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=SgkfTGCVy1c:olf4Uqq8tXk:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=SgkfTGCVy1c:olf4Uqq8tXk:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=SgkfTGCVy1c:olf4Uqq8tXk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=SgkfTGCVy1c:olf4Uqq8tXk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=SgkfTGCVy1c:olf4Uqq8tXk:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/SgkfTGCVy1c" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/8013073367967738969?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/8013073367967738969?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/SgkfTGCVy1c/python-core-mentorship-program.html" title="The Python Core Mentorship Program" /><author><name>Mike Driscoll</name><uri>http://www.blogger.com/profile/06351908417200979114</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="27" src="http://2.bp.blogspot.com/_YuqSuIXsbDk/TUrG6LJZw1I/AAAAAAAAAAM/iihYrmcjolI/s220/snakehead_blue.jpg" /></author><feedburner:origLink>http://blog.python.org/2011/05/python-core-mentorship-program.html</feedburner:origLink></entry><entry gd:etag="W/&quot;A0YASH09eyp7ImA9WhZWGE0.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-3126266884316474303</id><published>2011-05-19T08:45:00.000-04:00</published><updated>2011-05-19T08:45:49.363-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-05-19T08:45:49.363-04:00</app:edited><title>Portuguese, German, Korean, and Traditional Chinese Translations</title><content type="html">&lt;div class="document" id="portuguese-german-korean-and-traditional-chinese-translations"&gt;

&lt;p&gt;The Python Insider &lt;a class="reference external" href="http://blog.python.org/2011/05/python-insider-translation-project.html"&gt;translation project&lt;/a&gt; is continuing to grow! Today

we are launching &lt;a class="reference external" href="http://blog-pt.python.org"&gt;Portuguese&lt;/a&gt;, &lt;a class="reference external" href="http://blog-de.python.org"&gt;German&lt;/a&gt;, &lt;a class="reference external" href="http://blog-ko.python.org"&gt;Korean&lt;/a&gt;, and &lt;a class="reference external" href="http://blog-tw.python.org"&gt;Traditional

Chinese&lt;/a&gt; versions of the blog.  The translators have already started

publishing the backlog of posts. As with the other translations, these

parallel editions may lag slightly behind the original posts on

&lt;a class="reference external" href="http://blog.python.org/"&gt;Python Insider&lt;/a&gt;.&lt;/p&gt;

&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=h1jWkgV8r44:GpriJFbwgcg:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=h1jWkgV8r44:GpriJFbwgcg:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=h1jWkgV8r44:GpriJFbwgcg:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=h1jWkgV8r44:GpriJFbwgcg:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=h1jWkgV8r44:GpriJFbwgcg:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=h1jWkgV8r44:GpriJFbwgcg:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=h1jWkgV8r44:GpriJFbwgcg:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=h1jWkgV8r44:GpriJFbwgcg:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/h1jWkgV8r44" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/3126266884316474303?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/3126266884316474303?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/h1jWkgV8r44/portuguese-german-korean-and.html" title="Portuguese, German, Korean, and Traditional Chinese Translations" /><author><name>Michael Markert</name><uri>http://www.blogger.com/profile/08761481986934375758</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2011/05/portuguese-german-korean-and.html</feedburner:origLink></entry><entry gd:etag="W/&quot;Ak8EQnY4eip7ImA9WhZXGU4.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-1898170954288770285</id><published>2011-05-09T07:00:00.001-04:00</published><updated>2011-05-09T07:00:03.832-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-05-09T07:00:03.832-04:00</app:edited><title>Romanian and Simplified Chinese Translations</title><content type="html">&lt;div class="document" id="romanian-and-simplified-chinese-translations"&gt;

&lt;p&gt;The Python Insider team is very excited to announce two new blogs
today.  Translators for &lt;a class="reference external" href="http://blog-ro.python.org"&gt;Romanian&lt;/a&gt; and &lt;a class="reference external" href="http://blog-cn.python.org"&gt;Simplified Chinese&lt;/a&gt; have
joined the &lt;a class="reference external" href="http://blog.python.org/2011/05/python-insider-translation-project.html"&gt;Translation Project&lt;/a&gt;, and have already started publishing
the backlog of posts. As with the other translations, these parallel
editions may lag slightly behind the original posts on &lt;a class="reference external" href="http://blog.python.org/"&gt;Python
Insider&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=J4XrijXKrSo:oVHkbmUmvxo:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=J4XrijXKrSo:oVHkbmUmvxo:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=J4XrijXKrSo:oVHkbmUmvxo:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=J4XrijXKrSo:oVHkbmUmvxo:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=J4XrijXKrSo:oVHkbmUmvxo:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=J4XrijXKrSo:oVHkbmUmvxo:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=J4XrijXKrSo:oVHkbmUmvxo:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=J4XrijXKrSo:oVHkbmUmvxo:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/J4XrijXKrSo" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/1898170954288770285?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/1898170954288770285?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/J4XrijXKrSo/romanian-and-simplified-chinese.html" title="Romanian and Simplified Chinese Translations" /><author><name>Doug Hellmann</name><uri>http://www.blogger.com/profile/01892352754222143463</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="http://1.bp.blogspot.com/_--Fv8pzwveE/TUqnh9CVaTI/AAAAAAAAAWs/Z5gcLDnoegA/s220/book-smaller.jpg" /></author><feedburner:origLink>http://blog.python.org/2011/05/romanian-and-simplified-chinese.html</feedburner:origLink></entry><entry gd:etag="W/&quot;CkAHRHsycSp7ImA9WhZXGE0.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-4273475647560725193</id><published>2011-05-07T16:38:00.002-04:00</published><updated>2011-05-07T16:38:55.599-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-05-07T16:38:55.599-04:00</app:edited><title>Jython Migrates to Mercurial</title><content type="html">&lt;div class="document" id="jython-migrates-to-mercurial"&gt;

&lt;p&gt;Jython has finally migrated from Subversion to Mercurial. This has been a long
time coming: unfortunately we had a difficult Subversion repo that took some
effort to cleanly convert to a different revision control system.&lt;/p&gt;
&lt;p&gt;The new official Jython repo is now hosted @&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://hg.python.org/jython"&gt;http://hg.python.org/jython&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;with a &lt;a class="reference external" href="http://bitbucket.org/jython/jython"&gt;BitBucket Mirror&lt;/a&gt; for easy forking.&lt;/p&gt;
&lt;p&gt;There's also a larger read-only repo with ongoing feature branches (converted
to Mercurial Bookmarks) hosted at &lt;a class="reference external" href="http://hg.python.org/jython-fullhistory"&gt;http://hg.python.org/jython-fullhistory&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mercurial makes it even easier to contribute to Jython, pull up a fork and come
help us build Jython 2.6!&lt;/p&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=cr67BEYMOCo:MitZ1cfMsl0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=cr67BEYMOCo:MitZ1cfMsl0:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=cr67BEYMOCo:MitZ1cfMsl0:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=cr67BEYMOCo:MitZ1cfMsl0:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=cr67BEYMOCo:MitZ1cfMsl0:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=cr67BEYMOCo:MitZ1cfMsl0:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=cr67BEYMOCo:MitZ1cfMsl0:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=cr67BEYMOCo:MitZ1cfMsl0:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/cr67BEYMOCo" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/4273475647560725193?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/4273475647560725193?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/cr67BEYMOCo/jython-migrates-to-mercurial.html" title="Jython Migrates to Mercurial" /><author><name>Philip Jenvey</name><uri>http://www.blogger.com/profile/17437958274873977298</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="24" src="http://2.bp.blogspot.com/_aoPwdhKitjA/SPpOhvDjXtI/AAAAAAAAAA4/79gNWTLKRP0/S220/Phil+%40+La+Scala.jpg" /></author><feedburner:origLink>http://blog.python.org/2011/05/jython-migrates-to-mercurial.html</feedburner:origLink></entry><entry gd:etag="W/&quot;AkcARXc7cSp7ImA9WhZXFUw.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-5098421445272427367</id><published>2011-05-04T09:55:00.001-04:00</published><updated>2011-05-04T10:07:24.909-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-05-04T10:07:24.909-04:00</app:edited><title>Python 3.3 to Drop Support for OS/2, Windows 2000, and VMS</title><content type="html">&lt;div class="document" id="python-3-3-to-drop-support-for-os-2-windows-2000-and-vms"&gt;
&lt;p&gt;Every so often there comes a time to prune the list of supported operating systems to match the usage landscape. On top of that, the pool of contributing developers on a platform also holds significance, as there needs to be someone around to complete development tasks in order to have a quality release. Other factors, such as the age of an operating system and its hinderance on future development work, also weigh on the list.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.haypocalc.com/wiki/Victor_Stinner"&gt;Victor Stinner&lt;/a&gt; recently proposed &lt;a class="reference external" href="http://mail.python.org/pipermail/python-dev/2011-April/110872.html"&gt;dropping OS/2 and VMS support&lt;/a&gt; for CPython, a year after his &lt;a class="reference external" href="http://mail.python.org/pipermail/python-dev/2010-April/099471.html"&gt;original question&lt;/a&gt; on OS/2 support. Victor's original inquiry came around the time of his seemingly non-stop Unicode efforts, specifically for an issue with &lt;a class="reference external" href="http://docs.python.org/library/os#os.execvpe"&gt;os.execvpe()&lt;/a&gt; supporting environment variables via the &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0383/"&gt;PEP 383&lt;/a&gt; surrogateescape handler. OS/2 and VMS currently have no representation on the development team and receive no testing during the release process.&lt;/p&gt;
&lt;p&gt;The process of writing this post &lt;a class="reference external" href="http://mail.python.org/pipermail/python-dev/2011-May/111159.html"&gt;got me thinking&lt;/a&gt; about a &lt;a class="reference external" href="http://mail.python.org/pipermail/python-dev/2010-March/098074.html"&gt;previous discussion&lt;/a&gt; about removing Windows 2000, which seemed to fall to the wayside. Systems setting &lt;tt class="docutils literal"&gt;COMSPEC&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;command.com&lt;/tt&gt; were also supposed to be on the chopping block back then. &lt;a class="reference external" href="http://hg.python.org/peps/rev/b9390aa12855"&gt;As of now&lt;/a&gt;, both have joined OS/2 and VMS. Windows 2000 is up for removal in order to make development work easier, removing the need to account for legacy APIs on an operating system which hit end-of-life in 2010.&lt;/p&gt;
&lt;p&gt;In order to begin removing support for those systems, Victor and I started by updating &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0011/"&gt;PEP 11&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="pep-11"&gt;
&lt;h4&gt;PEP 11&lt;/h4&gt;
&lt;p&gt;This PEP outlines the operating systems that are no longer supported and explains the process of adding a system to that list.&lt;/p&gt;
&lt;p&gt;Once it is decided that an operating system can start the process of removal, it is formally announced as unsupported. This announcement traditionally goes for the in-development version, so dropping support of OS/2, Windows 2000, and VMS begins with Python 3.3.&lt;/p&gt;
&lt;p&gt;The first stage is fairly hands off, more of a raising of the white flag. It's a signal that there's no one around to maintain the code and ensure a quality release. Changes to compilation and installation may be made to alert users on those platforms that the platform is unsupported. A note will go into the &amp;quot;&lt;a class="reference external" href="http://docs.python.org/dev/whatsnew/3.3.html#unsupported-operating-systems"&gt;What's New&lt;/a&gt;&amp;quot; document listing the newly unsupported platforms.&lt;/p&gt;
&lt;p&gt;After a release cycle of being unsupported, the version afterwards becomes fair game for removal of code. In this case, code can be removed in 3.4. There probably won't be a wholesale removal of that code, but developers that come across it in their normal work may remove any &lt;tt class="docutils literal"&gt;#ifdef&lt;/tt&gt; blocks, &lt;tt class="docutils literal"&gt;configure&lt;/tt&gt; sections, or out-of-date code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-you-can-do"&gt;
&lt;h4&gt;What You Can Do&lt;/h4&gt;
&lt;p&gt;If you are a user of OS/2 or VMS, there are a few things you can do to save your platform.&lt;/p&gt;
&lt;div class="section" id="become-a-maintainer"&gt;
&lt;h5&gt;Become a Maintainer&lt;/h5&gt;
&lt;p&gt;Nothing says support better than an active developer. Andrew MacIntyre has been the OS/2 maintainer for some time now, and he stated during Victor's first OS/2 query that OS/2 is behind on Unicode support, so that's certainly an area that needs focus. VMS appears to have some amount of external support via &lt;a class="reference external" href="http://www.vmspython.org"&gt;http://www.vmspython.org&lt;/a&gt;, but as discussed in &lt;a class="reference external" href="http://bugs.python.org/issue11918"&gt;issue 11918&lt;/a&gt;, someone needs to step up to allow the continued VMS support upstream.&lt;/p&gt;
&lt;p&gt;If you are interested in taking over for either platform, see the &lt;a class="reference external" href="http://docs.python.org/devguide"&gt;developer's guide&lt;/a&gt; for the current development proccesses.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="contribute-a-build-slave"&gt;
&lt;h5&gt;Contribute a build slave&lt;/h5&gt;
&lt;p&gt;With an active developer, a platform stands a better chance of survival. With a build slave, a platform stands an even better chance, not only at survival but also at quality.&lt;/p&gt;
&lt;p&gt;Python uses &lt;a class="reference external" href="http://trac.buildbot.net/"&gt;Buildbot&lt;/a&gt; for continuous integration, and build slaves are &lt;a class="reference external" href="http://www.python.org/dev/buildbot/"&gt;currently provided&lt;/a&gt; for Linux, Mac, Windows, and Open Indiana (Solaris), for various versions, architectures, and configurations. Being able to donate a machine to the build fleet for OS/2 or VMS would allow those platforms to receive the same attention that more mainstream platforms receive.&lt;/p&gt;
&lt;p&gt;If you can donate either time or hardware to help keep OS/2 and VMS alive, contact the &lt;a class="reference external" href="http://mail.python.org/mailman/listinfo/python-dev"&gt;python-dev&lt;/a&gt; mailing list to coordinate your efforts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=RTWZNjzcHx0:VncS2cQK2Pk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=RTWZNjzcHx0:VncS2cQK2Pk:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=RTWZNjzcHx0:VncS2cQK2Pk:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=RTWZNjzcHx0:VncS2cQK2Pk:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=RTWZNjzcHx0:VncS2cQK2Pk:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=RTWZNjzcHx0:VncS2cQK2Pk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=RTWZNjzcHx0:VncS2cQK2Pk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=RTWZNjzcHx0:VncS2cQK2Pk:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/RTWZNjzcHx0" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/5098421445272427367?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/5098421445272427367?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/RTWZNjzcHx0/python-33-to-drop-support-for-os2.html" title="Python 3.3 to Drop Support for OS/2, Windows 2000, and VMS" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2011/05/python-33-to-drop-support-for-os2.html</feedburner:origLink></entry><entry gd:etag="W/&quot;D04ER3s5eSp7ImA9WhZXE0k.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-8610531252555854819</id><published>2011-05-02T10:18:00.000-04:00</published><updated>2011-05-02T10:18:26.521-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-05-02T10:18:26.521-04:00</app:edited><title>Python Insider Translation Project</title><content type="html">&lt;div class="document" id="python-insider-translation-project"&gt;

&lt;p&gt;We think the content of this blog is useful for the whole Python
community, so reaching as many people as we can is one of our
priorities. To expand our reach, we have assembled a team of
translators to create parallel editions of the blog in other
languages. We are launching two translations today: &lt;a class="reference external" href="http://blog-ja.python.org/"&gt;Japanese&lt;/a&gt; and
&lt;a class="reference external" href="http://blog-es.python.org/"&gt;Spanish&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The translations will lag a little behind the posts on &lt;a class="reference external" href="http://blog.python.org/"&gt;Python
Insider&lt;/a&gt;, but try to keep more or less up to date.&lt;/p&gt;
&lt;div class="section" id="help-wanted"&gt;
&lt;h4&gt;Help Wanted&lt;/h4&gt;
&lt;p&gt;The translation team is still very small, so we are looking for more
people to join. We need people able to work on the existing languages,
or to help us expand to other languages.  If you can help in either
way, contact Doug Hellmann (doug dot hellmann at gmail).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qrDBu7N4X_k:wMiUAPxroZQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qrDBu7N4X_k:wMiUAPxroZQ:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=qrDBu7N4X_k:wMiUAPxroZQ:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qrDBu7N4X_k:wMiUAPxroZQ:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=qrDBu7N4X_k:wMiUAPxroZQ:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qrDBu7N4X_k:wMiUAPxroZQ:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=qrDBu7N4X_k:wMiUAPxroZQ:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=qrDBu7N4X_k:wMiUAPxroZQ:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/qrDBu7N4X_k" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/8610531252555854819?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/8610531252555854819?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/qrDBu7N4X_k/python-insider-translation-project.html" title="Python Insider Translation Project" /><author><name>Davidmh</name><uri>http://www.blogger.com/profile/14913018830568213369</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="25" height="32" src="http://curiosoperoinutil.com/forum/images/avatars/84933877545a037df6609b.jpg" /></author><feedburner:origLink>http://blog.python.org/2011/05/python-insider-translation-project.html</feedburner:origLink></entry><entry gd:etag="W/&quot;A0ICQ30zeCp7ImA9WhZQGUQ.&quot;"><id>tag:blogger.com,1999:blog-3941553907430899163.post-6105067293231885816</id><published>2011-04-28T10:05:00.000-04:00</published><updated>2011-04-28T10:06:02.380-04:00</updated><app:edited xmlns:app="http://www.w3.org/2007/app">2011-04-28T10:06:02.380-04:00</app:edited><title>Meet the Team: Brian Curtin</title><content type="html">&lt;div class="document" id="meet-the-team-brian-curtin"&gt;
&lt;p&gt;&lt;em&gt;This post is part of the &amp;quot;Meet the Team&amp;quot; series of posts, which is meant to give a brief introduction to the Python core development team.&lt;/em&gt;&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;&lt;col class="field-name"&gt;&lt;/col&gt;&lt;col class="field-body"&gt;&lt;/col&gt;&lt;tbody valign="top"&gt;&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Name:&lt;/th&gt;&lt;td class="field-body"&gt;Brian Curtin&lt;/td&gt;&lt;/tr&gt;&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Location:&lt;/th&gt;&lt;td class="field-body"&gt;Chicago, IL&lt;/td&gt;&lt;/tr&gt;&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Home Page:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;a class="reference external" href="http://blog.briancurtin.com/"&gt;http://blog.briancurtin.com/&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;How long have you been using Python?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On a day to day basis going on 6 years. Prior to that I used it occasionally for a class in college and also at a summer internship.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How long have you been a core committer?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Just over a year. March 24 marked my first year with the group.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How did you get started as a core developer? Do you remember your first commit?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I got started after noticing a documentation bug while writing an extension module at work, then I submitted a simple patch and Georg Brandl committed it almost immediately. After having that quick success and a fresh source checkout, I wanted to dive in and learn more about the modules I was using and ended up writing a patch to add context manager support to zipfile.&lt;/p&gt;
&lt;p&gt;The first few commits I made were documentation fixes in order to keep it simple early on. My first code commit was to add a few features and expand test coverage in the winreg module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Which parts of Python are you working on now?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As one of the few Windows users involved in CPython development, I try to keep an eye on whatever issues Windows users are having. Due to that, I've had a chance to work on a bunch of the standard library, including modules I hadn't used. I haven't done much with the interpreter itself, but I'm looking to change that.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What do you do with Python when you aren't doing core development work?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I build a variety of test tools for a trading database which is written in C++. There's an extension module for the data API so we can easily write regression tests, performance tests, and we're always trying to build more.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What do you do when you aren't programming?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'm a huge baseball fan. I umpire college baseball in the spring, various leagues in the summer, and mix in watching and going to Chicago Cubs games.&lt;/p&gt;
&lt;/div&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=WvEj6rtc9A0:KTaJ5tHvMyM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=WvEj6rtc9A0:KTaJ5tHvMyM:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=WvEj6rtc9A0:KTaJ5tHvMyM:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=WvEj6rtc9A0:KTaJ5tHvMyM:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=WvEj6rtc9A0:KTaJ5tHvMyM:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=WvEj6rtc9A0:KTaJ5tHvMyM:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?i=WvEj6rtc9A0:KTaJ5tHvMyM:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/PythonInsider?a=WvEj6rtc9A0:KTaJ5tHvMyM:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/PythonInsider?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/PythonInsider/~4/WvEj6rtc9A0" height="1" width="1"/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/6105067293231885816?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/3941553907430899163/posts/default/6105067293231885816?v=2" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/PythonInsider/~3/WvEj6rtc9A0/meet-team-brian-curtin.html" title="Meet the Team: Brian Curtin" /><author><name>Brian Curtin</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="http://img2.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://blog.python.org/2011/04/meet-team-brian-curtin.html</feedburner:origLink></entry></feed>
