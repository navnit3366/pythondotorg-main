# Generated by Django 2.2.24 on 2022-01-28 19:06

from django.db import migrations, models
import django.db.models.deletion
import sponsors.models.benefits


class Migration(migrations.Migration):

    dependencies = [
        ('sponsors', '0072_auto_20220125_2005'),
    ]

    operations = [
        migrations.CreateModel(
            name='RequiredResponseAsset',
            fields=[
                ('benefitfeature_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sponsors.BenefitFeature')),
                ('related_to', models.CharField(choices=[('sponsor', 'Sponsor'), ('sponsorship', 'Sponsorship')], help_text='To which instance (Sponsor or Sponsorship) should this asset relate to.', max_length=30, verbose_name='Related To')),
                ('internal_name', models.CharField(db_index=True, help_text='Unique name used internally to control if the sponsor/sponsorship already has the asset', max_length=128, verbose_name='Internal Name')),
                ('label', models.CharField(help_text="What's the title used to display the input to the sponsor?", max_length=256)),
                ('help_text', models.CharField(blank=True, default='', help_text='Any helper comment on how the input should be populated', max_length=256)),
                ('due_date', models.DateField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'Require Response',
                'verbose_name_plural': 'Required Responses',
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=(sponsors.models.benefits.RequiredAssetMixin, 'sponsors.benefitfeature', models.Model),
        ),
        migrations.CreateModel(
            name='RequiredResponseAssetConfiguration',
            fields=[
                ('benefitfeatureconfiguration_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sponsors.BenefitFeatureConfiguration')),
                ('related_to', models.CharField(choices=[('sponsor', 'Sponsor'), ('sponsorship', 'Sponsorship')], help_text='To which instance (Sponsor or Sponsorship) should this asset relate to.', max_length=30, verbose_name='Related To')),
                ('internal_name', models.CharField(db_index=True, help_text='Unique name used internally to control if the sponsor/sponsorship already has the asset', max_length=128, verbose_name='Internal Name')),
                ('label', models.CharField(help_text="What's the title used to display the input to the sponsor?", max_length=256)),
                ('help_text', models.CharField(blank=True, default='', help_text='Any helper comment on how the input should be populated', max_length=256)),
                ('due_date', models.DateField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'Require Response Configuration',
                'verbose_name_plural': 'Require Response Configurations',
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=(sponsors.models.benefits.AssetConfigurationMixin, 'sponsors.benefitfeatureconfiguration', models.Model),
        ),
        migrations.CreateModel(
            name='ResponseAsset',
            fields=[
                ('genericasset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sponsors.GenericAsset')),
                ('response', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No')], max_length=32, null=True)),
            ],
            options={
                'verbose_name': 'Response Asset',
                'verbose_name_plural': 'Response Assets',
            },
            bases=('sponsors.genericasset',),
        ),
        migrations.AddConstraint(
            model_name='requiredresponseassetconfiguration',
            constraint=models.UniqueConstraint(fields=('internal_name',), name='uniq_response_asset_cfg'),
        ),
    ]
